<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (7276Data-Set-Spring-23-revised)' inline='true' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='7276Data-Set-Spring-23-revised' name='excel-direct.1rcl12s01bf3pz13caf5o0x1yskl'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sabdu/Downloads/7276Data-Set-Spring-23-revised.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1rcl12s01bf3pz13caf5o0x1yskl' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:Z40102:no:A1:Z40102:0' header='yes' outcome='2'>
            <column datatype='integer' name='Orders' ordinal='0' />
            <column datatype='string' name='Ship Mode' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Category' ordinal='3' />
            <column datatype='string' name='Sub-Category' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='integer' name='Quantity' ordinal='6' />
            <column datatype='string' name='Order ID' ordinal='7' />
            <column datatype='date' name='Order Date' ordinal='8' />
            <column datatype='date' name='Ship Date' ordinal='9' />
            <column datatype='string' name='Customer ID' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Segment' ordinal='12' />
            <column datatype='string' name='City' ordinal='13' />
            <column datatype='string' name='State' ordinal='14' />
            <column datatype='string' name='Postal Code' ordinal='15' />
            <column datatype='string' name='Market' ordinal='16' />
            <column datatype='string' name='Region' ordinal='17' />
            <column datatype='string' name='Product ID' ordinal='18' />
            <column datatype='string' name='Product Name' ordinal='19' />
            <column datatype='real' name='Sales 1' ordinal='20' />
            <column datatype='integer' name='Quantity 1' ordinal='21' />
            <column datatype='real' name='Discount' ordinal='22' />
            <column datatype='real' name='Profit' ordinal='23' />
            <column datatype='real' name='Shipping Cost' ordinal='24' />
            <column datatype='string' name='Order Priority' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1rcl12s01bf3pz13caf5o0x1yskl' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:Z40102:no:A1:Z40102:0' header='yes' outcome='2'>
            <column datatype='integer' name='Orders' ordinal='0' />
            <column datatype='string' name='Ship Mode' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Category' ordinal='3' />
            <column datatype='string' name='Sub-Category' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='integer' name='Quantity' ordinal='6' />
            <column datatype='string' name='Order ID' ordinal='7' />
            <column datatype='date' name='Order Date' ordinal='8' />
            <column datatype='date' name='Ship Date' ordinal='9' />
            <column datatype='string' name='Customer ID' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Segment' ordinal='12' />
            <column datatype='string' name='City' ordinal='13' />
            <column datatype='string' name='State' ordinal='14' />
            <column datatype='string' name='Postal Code' ordinal='15' />
            <column datatype='string' name='Market' ordinal='16' />
            <column datatype='string' name='Region' ordinal='17' />
            <column datatype='string' name='Product ID' ordinal='18' />
            <column datatype='string' name='Product Name' ordinal='19' />
            <column datatype='real' name='Sales 1' ordinal='20' />
            <column datatype='integer' name='Quantity 1' ordinal='21' />
            <column datatype='real' name='Discount' ordinal='22' />
            <column datatype='real' name='Profit' ordinal='23' />
            <column datatype='real' name='Shipping Cost' ordinal='24' />
            <column datatype='string' name='Order Priority' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z40102:no:A1:Z40102:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Orders</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Orders]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Orders</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales 1]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales 1</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity 1]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity 1</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_71BB16DCDA85446D81350C650DCF44B8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_106960497503117314]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_40532404797509632]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_40532405400363009]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of Ship Mode' datatype='real' default-format='p0%' name='[Calculation_40532405400436738]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Orders (Orders)' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column caption='Customer Types' datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_71BB16DCDA85446D81350C650DCF44B8]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_71BB16DCDA85446D81350C650DCF44B8'>
            <properties context=''>
              <relation connection='excel-direct.1rcl12s01bf3pz13caf5o0x1yskl' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:Z40102:no:A1:Z40102:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Orders' ordinal='0' />
                  <column datatype='string' name='Ship Mode' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Category' ordinal='3' />
                  <column datatype='string' name='Sub-Category' ordinal='4' />
                  <column datatype='real' name='Sales' ordinal='5' />
                  <column datatype='integer' name='Quantity' ordinal='6' />
                  <column datatype='string' name='Order ID' ordinal='7' />
                  <column datatype='date' name='Order Date' ordinal='8' />
                  <column datatype='date' name='Ship Date' ordinal='9' />
                  <column datatype='string' name='Customer ID' ordinal='10' />
                  <column datatype='string' name='Customer Name' ordinal='11' />
                  <column datatype='string' name='Segment' ordinal='12' />
                  <column datatype='string' name='City' ordinal='13' />
                  <column datatype='string' name='State' ordinal='14' />
                  <column datatype='string' name='Postal Code' ordinal='15' />
                  <column datatype='string' name='Market' ordinal='16' />
                  <column datatype='string' name='Region' ordinal='17' />
                  <column datatype='string' name='Product ID' ordinal='18' />
                  <column datatype='string' name='Product Name' ordinal='19' />
                  <column datatype='real' name='Sales 1' ordinal='20' />
                  <column datatype='integer' name='Quantity 1' ordinal='21' />
                  <column datatype='real' name='Discount' ordinal='22' />
                  <column datatype='real' name='Profit' ordinal='23' />
                  <column datatype='real' name='Shipping Cost' ordinal='24' />
                  <column datatype='string' name='Order Priority' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Category- Freq. Dist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_106960497503117314]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_106960497503117314]' derivation='User' name='[usr:Calculation_106960497503117314:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_106960497503117314:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{43B479F5-79BB-424B-9C44-D66ED0CE8309}' />
    </worksheet>
    <worksheet name='Category- Hist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_106960497503117314]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_106960497503117314]' derivation='User' name='[usr:Calculation_106960497503117314:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_106960497503117314:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{3B31F41C-AAE1-404D-BED7-C802D684BBA0}' />
    </worksheet>
    <worksheet name='Category- Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_106960497503117314]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_106960497503117314]' derivation='User' name='[usr:Calculation_106960497503117314:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' />
              <wedge-size column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_106960497503117314:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.4172928333282471' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0BA2C9EC-7E4E-49F1-AE9B-9BE2E5F7EB78}' />
    </worksheet>
    <worksheet name='Country - Hist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_40532404797509632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_40532404797509632]' derivation='User' name='[usr:Calculation_40532404797509632:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' />
              <lod column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532404797509632:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{5EB7F892-3905-4A09-8FE9-E3074039D0AA}' />
    </worksheet>
    <worksheet name='Country- Freq. Dist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_40532404797509632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_40532404797509632]' derivation='User' name='[usr:Calculation_40532404797509632:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532404797509632:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</column>
            <column>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C801ED6B-116A-4EF7-B732-C2FE426D7CD0}' />
    </worksheet>
    <worksheet name='Country- Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_40532404797509632]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_40532404797509632]' derivation='User' name='[usr:Calculation_40532404797509632:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' />
              <wedge-size column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532404797509632:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532404797509632:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3733149766921997' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4291EB46-5676-4974-8380-EEF924AE239F}' />
    </worksheet>
    <worksheet name='Ship Mode- Freq. Dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Ship Mode' datatype='real' default-format='p0%' name='[Calculation_40532405400436738]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_40532405400436738]' derivation='User' name='[usr:Calculation_40532405400436738:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532405400436738:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Standard Class&quot;</bucket>
              <bucket>&quot;Second Class&quot;</bucket>
              <bucket>&quot;First Class&quot;</bucket>
              <bucket>&quot;Same Day&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B491A63A-5469-4E67-BC29-C5B3949F96BD}' />
    </worksheet>
    <worksheet name='Ship Mode-Hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{53779C2C-AA71-4F41-8BCC-58D3F27AE3E6}' />
    </worksheet>
    <worksheet name='Ship Mode-Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Ship Mode' datatype='real' default-format='p0%' name='[Calculation_40532405400436738]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_40532405400436738]' derivation='User' name='[usr:Calculation_40532405400436738:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Standard Class&quot;</bucket>
              <bucket>&quot;Second Class&quot;</bucket>
              <bucket>&quot;First Class&quot;</bucket>
              <bucket>&quot;Same Day&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' />
              <wedge-size column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532405400436738:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5932043790817261' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8961BDA2-57EE-400D-96C8-62E60910CCAB}' />
    </worksheet>
    <worksheet name='Sub Category- Freq. Dist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_40532405400363009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_40532405400363009]' derivation='User' name='[usr:Calculation_40532405400363009:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532405400363009:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5FDD7D1B-86D6-4C28-A26F-B24F53768714}' />
    </worksheet>
    <worksheet name='Sub Category- Hist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_40532405400363009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_40532405400363009]' derivation='User' name='[usr:Calculation_40532405400363009:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532405400363009:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]</rows>
        <cols>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{232706F0-0B31-456A-8126-07F0A0D7F67B}' />
    </worksheet>
    <worksheet name='Sub Category- Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised)' name='federated.1neh3kl0yxxc5k16rnnw71fltzuy' />
          </datasources>
          <datasource-dependencies datasource='federated.1neh3kl0yxxc5k16rnnw71fltzuy'>
            <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_40532405400363009]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_40532405400363009]' derivation='User' name='[usr:Calculation_40532405400363009:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' />
              <wedge-size column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[sum:Quantity:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[usr:Calculation_40532405400363009:qk]' />
              <text column='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3733149766921997' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2FF15502-74A9-4029-8E4E-AA0040FD54F9}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Ship Mode-Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC70676-E862-492F-A4BA-2F07C42B5205}' />
    </window>
    <window class='worksheet' name='Ship Mode-Hist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EF3E83B1-5827-43AC-B16A-3122FE236758}' />
    </window>
    <window class='worksheet' name='Ship Mode- Freq. Dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD06AE6C-86DE-4248-B3B7-E846494FC1A6}' />
    </window>
    <window class='worksheet' name='Country- Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C952B3DE-145D-474E-ADCB-B44A7906EB37}' />
    </window>
    <window class='worksheet' name='Country - Hist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B8148787-4EE5-43AC-9693-3A7A30C20414}' />
    </window>
    <window class='worksheet' maximized='true' name='Country- Freq. Dist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0539A52-52BB-4A05-B7C0-E3695182C0FA}' />
    </window>
    <window class='worksheet' name='Category- Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C000B80-FF2E-44F8-BB92-C71FBF75D3A7}' />
    </window>
    <window class='worksheet' name='Category- Hist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Country:nk]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{618E5621-C30E-41BF-B9CA-74BE51E4014F}' />
    </window>
    <window class='worksheet' name='Category- Freq. Dist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Category:nk]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB8059DE-F5C2-464A-AB26-05F5CF51CC16}' />
    </window>
    <window class='worksheet' name='Sub Category- Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F8962BE7-CD5D-4F24-AA8A-3DDCABB70B8A}' />
    </window>
    <window class='worksheet' name='Sub Category- Hist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EABEFB4E-2A34-415C-896F-9192AF59E5DC}' />
    </window>
    <window class='worksheet' name='Sub Category- Freq. Dist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[:Measure Names]</field>
            <field>[federated.1neh3kl0yxxc5k16rnnw71fltzuy].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D124956E-6811-46DB-B926-A8BF22E09D63}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='104' name='Category- Freq. Dist.' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Category- Hist.' width='192'>
      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
      hAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Category- Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country - Hist.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country- Freq. Dist.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country- Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Ship Mode- Freq. Dist' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB8CAYAAAA/1L8JAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQz0lEQVR4nO3dfVzN9//H8cf3W1KZfi42F2tjrsYwQ0cL68QiIy2WL6O+TBbNVbRcNpmG
      MpZZbDJXmTZ+ZtOMJkTHcnkSDUNGmWviq35OqdPt8/vjJL6Uk5Q2n9f9dvOH87l6nc/tPPu8
      zznvz3n9Q1EUBSFU6p+VXYAQlUkCIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIg
      VE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRN
      AiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIg
      VE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFTN0twKer3+SdQhRKX4
      h6IoSmUXIURlkSGQUDUJgFA1CYBQNQmAULXHCkBWajRB/brSUaOhY9d+jJyfwEVjeZVWkgyi
      vTVM15XP3nTTNXhHZxSzxMjFhDB83ZzRaDQ4u/kSmXzLzDbi76bsAbi1hZkjYnnuw/Xs0utJ
      jA2nb+5OdOdNi//uL5Is3Se8F3wchzmx7NXr2b56JE1u/6eyyxLlzOz3ACU6d4a0/Ffp3bGW
      aSd2Tek+JbTcCqtch1k2K57W07Ywqp2d6aE6GnrVqdyqRPkr+xXghZa0sYsn8pOtnDHcO+4x
      DVECN8GJSC80Gg2awvFK5rYZvFs4pNA4uzFq2TFu3bNNwIK7QyrngZEUjjgwXkwg7N93hloB
      rLt492jm9jldl8X++QNx1kxHB5CVSnRQH5w1GjTOfYjYW8xzyziEPrMtnV63M38eMrcx4103
      0/40zriNWsaxO3WfXk9Qn7u1+a44YVqQtZ/5hc9H07Er/WZsI7PUJ16UK+Ux5F/YrkR84Km8
      4eCkdPGZpqw5fLNoWWKIgzJoZfp/rX/t6EEl7eZt07aZPyhjHQYrq88piqKkKysHOSjvL/lN
      uXArX1FuH1Q+6+2ghCQqiqKcUBb3dVIGLzum3MpXFOX2MWVR/zvLzO9z0OAAJWBN4bbK/ym/
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ship Mode-Hist' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAPyklEQVR4nO3dSXMbZ36A8afR2PeV+yZukmnJkieWxh6rEmdmnKlKUpXkklQu+RSpnPMt
      ckxVcsotFddMamLH9li25ZJ3S7JkSlzEFQRIgtgbQC85SJbGJpgxaC4A3//vIhQAEW8X8PQC
      9AtojuM4CKEo12kPQIjTJAEIpUkAoq1aaZeF5TWKxeK+26xGlXK5zOb6Gubv7UCX2ty322ly
      DCDaeee3/83w9ByLdz9naHoOzWqgWQae6AAj3gK/3ghhfPoWL//qdQzDIu6zuPnFfa5dmsEJ
      pJgcHTjtRfhBJADR1tbGKh/c/JhILInfrYFLo1avoet+XrmQ5F/+60sujGTA78WnmWCB42qx
      tbLOucs/5frVy6e9CD+IBCDaKu7kKLdcxEN+wAFN4/NPb/H8iz8l5neRL9YI+704jknZsAm4
      TKqmi6Bu0tT8DKQTp70IP8iRBvDtn9I07aj+pBDH6kgPgh3HQTYoopfIu0BCaRKAUJoEIJQm
      AQilSQBCaRKAUFpXB1At7bFXqh54e6vVOvC6ammPYrlKs819hPiW+7QHcCDH4b133mZs9jn+
      5zef8/LPXiVXqDGa9rO+22Qo6uLj+6vMDsUJ9p3D3MviC4e4cetL/u6v/4xbt75gamacxVKZ
      erHM3MUL3F9YZzTpo+6OMd0j56qI49W9AQBXfnKZr+bXmbt4ifpentu3btN68TJhv5uVrMH4
      YILsxgbbS3kGkkG8xRLnp8fAbuGPpMkkomTXF1hfWWWn4WA1W/gcHy3dBAlA0OUBVEolpmZm
      oZrDE07ywrVrTJ0bQ9egsLVGhSB9Qw4TqWGSkSDNyg5L+TroYYZTOusFg9m5K2iuEENj46xu
      bJNOeGh6k6e9aKJLHOm5QLZtA+BydfWhhRBPdfUWoC2nxe/eegdPIkl9a4voyCRXLz/Hr//z
      P3jupZ9TXf8MJ36etYVvuHb9T0hH/ac9YtHFOg7gwb07lBoQD2gUDcikojQaLaYmzx3H+PZz
      oGk2sOoNGlYDw2gAJl63j63Ve6wsrmA5TUIZD/n8Luno0MmMS/SkjgNIZ9Ksf71IMj5E2uOw
      t5snEO3HcRxs237677FxbIKBIHowgMsI4fNqzD9YwOMPEY4Pcv3VNHtGkOzqPF6vG9M0j28s
      oud1fAywt52l2NCI+aDUgGQshGm2iMXiT0+FPsljANs2sSwNj0c/sccUZ8eRHwTfXFmmbqrz
      4ZPu0vnTyenTHoY4pCM/CL65sky+dvCnt2eNz+2WAHqYvF8plCYBCKVJAEJpEoBQmgQglCYB
      CKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQWscnwzVqZQrVFvGgm0oToiE/tmXh88vMK9F7Og5g
      bW2NYt2iFvZjWw6FvIXLE2RyYlTNr0Z3ON4JQOJYHWoXyLEsbBwcHv8YhrwARK/qeAswPDJC
      uNYiHvRSa0Eo4H0agJK/DKPJt2D0so4D8Acj+IOPL/u+d5uSu0Cip8mqSyhNAhBKkwCE0iQA
      oTQJQChNAhBKkwCE0iQAoTQJQChNAhBKkwCE0iQAoTQJQCit47NBtzZWyO5WGe1PUGo4pOMR
      Wq0W8Xj8OMYnxLHqOID+wRHqrVXKVQPdcVha3CQYHyQWO+afRupWDvIzTD2s4wDq5V2C0RSV
      /AqFBqSTfdTrVTRNU3NiiAZud+/92KZ4rONnLhBNEwD6EnP7bpMJMaLXKLjKFuIZCUAoTQIQ
      SpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKE0CUAorePToXe21tmpWUTc
      FnsG9CVjNJsNBgYGjmN8QhyrjgPI5fJYrgCNSICo12F9bZFQYhjHkRlhovd0HEA6k2YjV8Ll
      tCgaMDg0QcMwZEaY6EkdP3OZgREyB+ztyIww0WsUXGUL8YwEIJQmAQilSQBCaRKAUNq+AOr1
      Otvb26cxFiFO3L4AstksN27coFAonMZ4hDhRbXeBSqUSb7zxBvfv3z/p8QhxovZ9EJZMJrl6
      9SoAhmGc+ICEOEn7AojFYkSjUUBD005hREKcoLa7QJZZ58Zbv+XdDz7BtOX0BnF2tQ+gVUfz
      JxhORWmY1kmPSYgT0zaAhbtfsbyyRtnUCHnlTEdxdrV9dScGJxgr2QT8/pMejxAnqm0Azdoe
      TXxUSkVg9Du3PVqYx8CLzzEoGtCXimIYTSYmxk9ivEIcqbYBROMpdj+5T//I6L7b/AE/O7kS
      vkSElBu2c5sEYoMyI0z0pLYBBPxegpEU8Uhg/3/QdQKhEGG/m6IB4+dmaDabMiNM9KS2z5wn
      ECcedlOu1PbdluofJtX/+HL6e7fJjDDRaw54G7SBYTQpV6onPR4hTlTbAHSPh0Qijm3Jvq04
      2w7eadcgHA4hOzXiLGsTgM1H791ge6/IyqNVFHxfRyikzUGwTbXeJBKPovlT6Cc/JiFOTJsA
      3Lz+F3+JZVny9p4489oeA2iaJi9+oQQFP7kS4hkJQChNAhBKkwCE0iQAoTQJQCit4/c6Hcdm
      YyNLOPD4dOhULIRptohGY8cxPiGOVccBFPJZcjtFWlE/mg2L22sEYwNEIlGZECN6TscBFEsl
      Cts5At4MRgtSiQx1oyYTYkRP6viZOzd9gYmp8+A4ODz+1FiIXnWoVZemaaBpfP+lLzPCRK9R
      cJ9FiGckAKE0CUAoTQLoQo5t8ulHH7Jb+QNfT2+3KFXqmI0KNz/6mNzO7skM8AyR9++6UL2S
      Z22rxPDEHjc+f8jk+DDLWyV85h6h9AjbG4/oGx5nc+lrgkMv4K1tcenKFe7c+QqjkGXbcENl
      k9TwBA8ervPaa6/glnfr2pIAupDXG2ZsOM7v3vwNixsVaq0W42OjrM5vUK0vkx6fobx6Hy0U
      xa278HtdPFxYxLYd5u/d5ouNJhczGjXbx4OvvuSPrr9MwiMBtCMBdCHdG2Rk7BwXr7xEYbdA
      IhGjWKoy/GoKty+E263D2CDl4h6hWAKvPsT2ToFobBKzMctVPDitGr5gmNmZaeJuefEfRALo
      QppLJ9P3+Ov3+voygEMyHuXbn+zRNA1N04knkuByYds26XQKx7bxhqNPPpwMAsg3fP8BEkAv
      cBzufnGL5W2D0ViT5NRrjGVcfPLhh9RcPnxWjYatUakaXHv1j+mLh057xD1D3gXqCRrhYJhw
      JMLk9MyTJ00nFItx5dJFQpEEs+PD1Jt1lpbWTnmsvUW2AD3BoVSt0JcZ4P69BaxQmVLeQ3Zj
      C8vjJbeZxRe/yNTQIEPjQ6c92J4iAfQCzcXll155fHnm3NOr5+bmHl947sm/5/b/noP4/0kA
      R6Dwb/9Oa3PztIdxYjTNReaf/vG0h3EkOg5gb2eL3apJJuKj2IBkNIhlmoQjkeMYX09ofDNP
      c2HhtIdxcs7QvI+OA3DrOru7eVxWCGyHxdwqgVg/oXBY2Rlhyp0G7jhnZhZcxwE0mi3sVpNW
      S8doacQTKeVnhCk3KegMfXVmx0sRS6R4IZbC43Zh2eDWXeqtAcWZ0fEq2+3x4vd50XU3Xo8b
      l8uFruvqrQXFsdhYuMtb735EfqfwnetL5TIA2UcPePv9WyyvrBzJ452N7Zg4M8qFApbbR34r
      x8Pbn2A7sG0GaOQXuP7635DbqfDz69e49dmnPLp9kyxpzNwil168wt1HJf7+r37R0eMpuNMu
      ulkkMchr16/iWBb9o1Ocn52kWNhhenISNI2Q1+F/379FwO/H1ANEAl4GMjHKdY1WcYdmh48n
      WwDRVYampgB4/tLc0+v+4W+nnt0h/RNmvr089/x3/u+rr7zU8ePJFkB0JefJCYC53T0++uB9
      SvUWjmnw3rvvkNvZ5u033yS7tcUHNz/B+hFvwkgAoku1SCQHWVtZIejTWXq0RjW/Qdn24Cku
      Uw4MEg74cIwcm3utQz+KBCC6k2PxxZd3GBzIYKNRr1dpesOkPU1uZ20yrUd8+TCLpkGj3jj0
      w8gxgOhSbs5fmEZ3e0mk+wn5dEx3iKHxaQYGB9jY3KIvnWArH2Zs8PCn4UgAoitpLg9TM08O
      d9OpZzfEHk/2GR97fObrxHj4Rz2OBCAO5Z//9V3uLOZOexg/mgQgDsW0bFpW75/8KAfBQmkS
      gFCaBCCU1vExwG5ug/XdKv1RH3sG9CWjNJtNMpnMcYxPiGPV8RYglkgS8vkwTIeQ7rDy6CEV
      w8JxHJkRpgrHOTPL3HEASw8fUG80sc0Gu9UG/QOjuOyGzAhTiaadmWXueBdo+rlLB952VtYK
      Qh0KrrKFeEYCEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0CEEqTAITSJAChNAlAKE0C
      EErr+HTo4m6WvZoLrVWkWHfoT8cxjAajoyPHMT4hjlXnM8KSKdwaoPtIhnxkN1doOW6ZEaYS
      lWeE7WxtsbWVw61D1YLRsWnCfpfMCFOJyjPCUv0jpPrb7+6clbWCUIeCq2whnpEAhNIkAKE0
      CUAoTQIQSpMAhNIkAKE0CUAoTQIQSpMAhNIkAKG0Q/9IXiG/yZ4B6XgEs9Uknkgc5biEOBGH
      3AI4lGoN3GaD5aV5disNOCNnBwq1HHILoGE1ahQaGplUH/V6DeRMUNGDDr0LNDk7t+86OR1a
      9BrNOaJXrW3b2LZNy7LOzGSJH8plWrjUWmSauM7Ebu+RBQDPtgAqBSDL3NuONIAj5Tg8+OYu
      nnCKRCRINBrdd5f8dp5M+rs/z5rP5+nry/Dg3l0C0STobob79/+Eazc/eS2jzL1vlhk5N0Ui
      Ejj4jnaD/F4Tr1NjPV8iEApw7oAvJ+jm5f19+bVl8jWLkaEBIqHg0+tLpRLRaJTcxgo7VYto
      yMfw0ND+P6BpdLKk3RsADusri1QaGrv5DQb70nx2d4ELMxNUDJNEUKfYAFc1T82TIkiNUCTG
      TqnGz65dYnl5m4mRFItrq9z77HNGzz/P6vo242kPTniIS7Pjp72AB7KtJvP359HdOnfufsPk
      zDTBcJjKTg5fIETNqBPw+Gg6DaKpCTxmhZHxcZaXl7BrBeazBgl3lczoFPe+XuRXf/5LvD2y
      j7a59IBd041fh2Z1D4/bzdJ2jYTXZvLCC5QKeSYmJlhcWqS4tUqJCE5pk5Gp8ywsZfnlL66j
      d7Cohz4IPnYOWKaN2xtkaKAPl9vHzNQ4qb4hBt1Q2dvB8rjxBnWinhCp2CitepmGrQMeNKvC
      Ws5FOOBnbOYC0Ugc+h2SmQiG2b2LDWBbJo7mIhiOMDM7SyoVp1I3iYRDeMNxBkfHsY0S2dwO
      oYCPqMfFvfvzxBNx0GFCdwh5THRfgPGRfuwuXcW1E46nySQSFPJ5PIk4Xt2h5uTpi/pBg1jI
      x9fzi2QSETSrn7ArgCvhw+8PMdSfwHboKIAu3gIIcfzkVAihNAlAKE0CEEqTAITS/g98gK2d
      IcTOdAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ship Mode-Pie Chart' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sub Category- Freq. Dist.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub Category- Hist.' width='192'>
      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
      pYklrAkPlJAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sub Category- Pie Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29V5Bc2Znn97smvavMyizvDbzrBhroRjfakd30nOEsubGrnZ2ZmJ2RNPOg
      fVHEKmIVoYlYPUoPWq12Q1ojzayopZkh2ZzmkByy2Q1HoA08UEABhfLepPd57z16SJiqQpnM
      qsyqQtf9RXQ0KvO6zDz/c77zne/7jiSEEJiY7FLk7X4AE5PtxBSAya7GFIDJrsYUgMmuxhSA
      ya7GFIDJrsYUgMmuxhSAya7GFIDJrsYUgMmuxhSAya7GFIDJrsYUgMmuxhSAya7GFIDJrsYU
      gMmuxhSAya7GFIDJrsYUgMmuxhSAya7GFIDJrsYUgMmuRt3uBzCpPun4Arfuj9MSdGKpacKu
      GHg9nu1+rB2BKYBdgGYouKQ0NwdmkfRBauvbOXFsH9J2P9gOwBTAc4aWS3Luww9JFiTyko0j
      ezvZ09uz5jnTI/3EhIs3XjnEw1ufcWugn70H9uG1btFD72AkszLc84UwNK5evgQOL9FImHwq
      QsehU+zvbF71nGQszEI8TVNjPSATj8UI1Aa2ZQQwdI2CLlAlQbZgIKNjsdkBCVXZ+impOQI8
      Z2jZFPFcgb297bS3NjM/OYy/xrfmOW5fALcv8OTv2trAGkdXl/D8DIOTcyi5JNPxPC4RRbc1
      ceSFI4R8zi1/HnME+Jyi59N89z/9Jfvf+AI+dLxemYcTBiG7hr+tlUQ0Sa1HJalZaa7fWkH0
      3esjm8qiCYM6j42RyUmG5nX+6Dtf3dLnANMNuuM5d+4smcgY5z7rX/L6xOQEAJFIZMXzFKuT
      F188xeGuWi5d/IiP74xjV/L03R/nysWznP3wPLfu3WNgaKTqn2ExE4P9jIzP0NhQi90VoKGl
      k+MnXuaF/V1b+hyPMUeAHc7fv/dDXKEWsDm49dFP6Tz6JrqQcFjSZHQHrQ0BwhOj4KrhzsXf
      0H70JA8HJvmv/5s/ILUwj6/WzceXPqW+uY2xkTH27t2HQob+oRla6z0kDQeH93Rs98fcNkwB
      7HAe9t1gIpIlWGPh4eA4XqefrJDo6m3BgkQ6k8Zld4GR4f69ATr27OPGJ5/wxu/+A0LOHeLm
      MbJ88PdnadlzgFqfk2Bt7XY/0RNMAewGdB1yWUilyIbjjEymycRS5JJZ8qkshWwBLV/AKOgY
      hqA1n8aiSEiKgmy3oNhtKE47Fp8T1evCGvBgDdZgqXGjuh1I63lvhM7H58+Cxc6doQn2NPiY
      y8oErFncLi8/+flHvPOlLzA5MYOtMM+UFuDP//DbW/LVmF6gzxtCQC4Hc7MwPwfz8xBegGwW
      dB1NWOgfklmr29OzWSTW7xcli4rqdmBvDGBvqcPV0YC9JYjisCPJi5yshoYmJLw1dXQ25fF5
      HRQyMj0d+5ByCV49fRyhaaQyOfYcOEiLdesm5eYI8HnAMGB2FsbHYGqy2OB1fcVDNUnhFw9V
      9DV+9fZsCrUEAayEpCrYm4O497Ti3tuKs70eSV7f1xKemSCWV+hobdjS9QlTAM8polAg19+P
      NTyPPDEOmUxp5wG/mnSRyWirHrMZASxH9TjxHOrEd7QbZ2cjsqpU5LqVwhTAc4QQAm1yktSF
      i6Qv/hZtdpbgiWM4A/6yrnNhxsFC0lj1/UoKYDHWWi++F3qpObEXa9CHJG1/NJIpgAoh9Bwj
      E/OkYwt0dncjVDtOa2V6O6Hr5PruEv/5z8nevAXa097b2dJM8MCesq53NWxnLLL6z14tATxG
      UhXce1qoPXMEV0/L0vnCFmNOgivEwL17DM/Nk4vMMDKTZN++Hjpb6jZ1TaHrpC9/TPxv/5bC
      8MoLVpmZGYx9Pcgl2NmPcVk29VibRmg6ib4REn0jOFrrCL51DO+hrvW9SVXAFECFGBp+yPB8
      jt/70mvcvjdA/4P7GxaA0DQyV68R++u/oTA6uvaxBY1MOIorWLrnxKkasEOCoTNjs4z91d9j
      bw5S984JPAc7Spo0VwrTBKoguVwOSZJQJIN4WsPvc5d1vhCC/IMHRL/7/5Hrv1/yeY7mRoIH
      S4/vX9CsXBhZ/ehqm0Br4epppv6rp3C01W/JHMEUwA5Bj0aJfu/7pM6dL7o1y0BSFJrfPoNc
      YoNJ6zK/HrUijJV/+u0UAACyhP+lfdR/7WVUl6OqtzJNoA3wi/e+T9uBU1iMHE2tzUxMzROe
      GqFj7yGSsRjNjUHGpxdoaQgwG8kQ9NpIZfLE0zl6OtuWXMswDD540M+F33zAH5+/jFRm44dH
      c4W5Bdx1wZKOt6gSFgXy5d9qazAEkY/vEr89ROM3X8X3Ym/VzCJTABtBAIUEH1+6iKehi3hO
      o6ehhvjYbX716X169x4g6IL3r10hpSn0NHhpCAb4dHBuiQDmkgn+7YVzfDIyjJDgYFsLLw+v
      bfOvRmZmFlddsCQzSBU6VsVCvrChW20ZeirL+Pc+IH5rkMZvncFSU55JWQqmADbAqdffweex
      E12IEGxqZmomQkezj3he4sBewZ69vfhcKoFgA+NzCQ50t2GR8rSkiucLIfh4ZJh/fe5Doo8X
      sCSJH7U1c2hmDneJi1qLyc4vYOg6irK+61UCnDaFZHb1xbAdg4D47SHSozM0/8O3cO9rq+jc
      wJwDbDF5XeevPrnMT27dwFjhq38tHOOf3Li9IR9N4Njhks2gGwtWhqMr32Xb5wCroNgkev9g
      H+qeMyBXpu82E2K2kIVUiv/x/ff40c3rKzZ+gN/6fdxv2Jj7ND01U/KxTvvOCkkohcYjKdSp
      D+Hm/wv5ZEWuaQpgixicn+df/PTH3J6eWvM4Q4IfdrWTt5S/WpVbCKNppZk1Tuk5MH8WEejS
      8NXHi39EBuHqf4Rk6YJfDVMAqyEE4+PjjA0+IJ7OkUqnN3ypT0dH+B/e/wmT8VhJx49bLfym
      q73s+whNI7uwcorkcpz25+ent/sFDfsiS83CzAJc/7+LYtgEz8+3sMXMjT/k0s27DA32cem3
      v2VkcqFsq1gIwdmBB/yrX/4dyVyu9BMliZ811TPn85Z5R0iVaAY5KeyUxeA1UazQ+kIMWV4h
      vLuQLppDs7dZM8FhDUwBrEL/wAAz46PsP3KSoK3AlTv30Mvwmwsh+Pv+u/yvH/4abQO+/QLw
      /T3dGGX6v3Nz8+jayrkAi1Fkga1CwXpVQ4Kmo2lszuzqxxga9P0NzNwoWQSx+Uk+uXqb8aF7
      phdoLTKZDBZVQSAxvxChoaGupE5TCMGt6Sj/8y9/TDJXvktzMf/s4QgvjY6XdY7/8AE8jfVr
      HiOAjyZsxFdoWzvFCxTo1mjcN09JXk9Jgb3fhIZjrHfCtcvnGBoawvA1mSPAWjgcDlSLFYvF
      QmMZjX8onOX6RJ5Xu17BYbFt6hl+1NFC0lFeOEB6enbd5iuxsz1BjoCgYV+4tMYPIHTo/2nR
      HFqHzu4eXL4g7779uikAEPzdT75PNFNgfHSEdCbL2OgoseHPuHJ/nkgsytjkNJlUnImpGVKJ
      CHPhGJMT42SzacYmpxddCcZiOS4OxxFAjcPPG72vbUoEEUXhp73l1czJzS+gF9b38jjlnekJ
      UmzQ8kIMWSrTdBQ63P0RLNyHNboAjz/E6194B4/NgvIXf/EXf7Gpp33OyUbG+M3F62C1Ep2d
      Z6D/LpqWY3Z6nEjBSS4yzvs//hWK20psZp7RmWm8UpTv/ug3GHqB6/eGOXJwDxIwl8zz0UDs
      ab6tJGG3OKj3hJiMTaIZ69vmKzHmsLEvnSWQKt0Tpbhc2Lxrhw4khYXZFdzpNVph+3pGCVpe
      TOOqSW3wAqIoAH832J46EbKZFJmchs1qQZYVLKpSjNzd7QJIpnK8dPoMViPB/buD9O7tYXRy
      nqNHj+L2+fHYFRxODz3799JcF8SqGKQlDzUOC51dHSiSQltbE6mczq8fRMmtkG1utzio94aY
      jG5MBEKSGPN5eHVqFrnECbUQAldj/ZpmW06XmEg8e8R2CqC2p0Bte3RzDipDg/AAhA6Cagfg
      yuXzXLt1H7fbSjadZGh8DlVPmpPgxyz/GsqJNynoBr/ojxBOr25SCATxTJSzDy6QKZThEl3E
      tyam+dL9h6UdLMs0vn4ai3X1BbW4sPLh4LOfc7smwc5aQcfLc+WbPqvhbYFjfwSKlQsf/IxY
      SqWuxY8QClarSi6dNecAj5Ekacl/pWIIweWRxJqNH0BCwmuv2dSc4BeNZawNGAaZ2bk1D3HI
      Oyceumj3RyvX+AHi4/Dg5yAEjU3N+Orr6O7oorenh862DhoDbnME2AxCCAbms/x2JF7WebFM
      ZMMjwZFEij+7cgOphJ/NGvBTf+LYmubEz8dd5HNLxbvlI4AEbSdTeEOJ6lx//+9B/dEV3aPm
      CLAJIhmNT8fK/9F8Dj9vbnAkuOVxcbWlqaRj89EYWi6/5jHF/ODtJdhbqF7jB7j/M0jPr/iW
      KYANohmCi0NxCqukFa6H117Dm71nyhaBAP66s42M3b7+wYZBenblH/4xzm2uEOEMCep6Sotf
      2jB6Du79BPRnM4BMAWwAIQR3plOE16iuti6ShNdRnBM4LSU05kVEZIm/7eksyUhJT8+seZxT
      3T4LWLFBy7EI8lbMReJjMH7pmZdNAWyAaFbn1tRG/dRL8Tn8vF6uCCSJs6EAI6H1k18Kkeia
      ZpBru0wgCVpeSGG1rW2iVZThs5Ba6hjYtQIYHx5gYmaesbEx8rksWommjDA0bo5OrFlctly8
      jhre3HOmLBHowH/p6aCgrp8ZlZ5Z3RvktG5PSGhobwF3sIp2/0oYBXjwMxBPRb9LBWDQd+cO
      an6WX56/xo2bd8jmSssQL0Quczj9v7BPvYRCZUIJJMBt9/HGntdwWksXwYjdxrllVSZWIj09
      s2qgpEPSSo+3qRCuOoNQV2R7orEjg0vihXanAAydYF0DNx+GOX2giUhsgRu31g+iElqK3NR7
      qGTYL97nLfX/ol4ZYa24k1KRKE6M3+gpTwTvNzUQ9q6963shGqOQXTmk2GaRULawNqdqh5aj
      0a2x+1dj8APQii7o3SkAWcXrcnD06DHae/dz6thhurvX3mwaIDf3K0ThqcfCIyZ4hX/PSfXH
      OKXK5Kh6HUXvUKkiyMgSP9jTta4E06ssilmEhmWrgkIlaHkxiWUr7f6VyEZg4hNgtwoAiZ4D
      R6jzu3G5XPiCjTTUrr3CahSi5Gd/vcKVBM3iCm/L/5pe5ZOKmEUeu68sEVz3uLnZuvpG2bB6
      iLQEOLYoLDq0L48rUJmOYtOMXYR8ancI4L0f/GcGRiZJJRPk8gUMw0ArFEim0ty4dZtCLksm
      lyebTpHNFcikUxQ0jXg8gRCiWLNz9ldgrJ6ZZCHFQd7jDfU/EJLH2axZVBRB6ebQD9tbyNhX
      X1PQ4gkK6ZWTc1xbkCDvqjcIdW0yyK2SFNIw8cnuCIX46+/+R/Ydepnx6SE8dgfC4iE6P8bN
      hwu8deYEhfgcKcOCUxQooHPz2i2OHj/BtVsP+bM/+2Mccppk378Eo9RdWGTGpJPc0b9AVmxu
      9/NENsZHD86Tzq+RFviIL84t8O3b91Z939vbRU3ns8n295IO+mee2uSVDoVQHdB9JozFus2m
      z3JU++6oDBcI1KLaHbx06lX0gsbk+ATdRw7jqAnTUF9HzqIT0x1Ex+/T0HOQk4qV+rYOhCGD
      BIX5j0pu/AASBm3iMg3ybe7xJYb0YxgbHGw9dh9v9Z7howcXSOXXfoaPggFeCtXSPrew4vvp
      6Vl8ne3P9MLFEilVMgbkR3b/Tmv8AFp2d4wApSHQNB11mV9d6BmSd/8nRCG8watCVOrilvEV
      FoxGNlqKIZGNcfbBeVLrjASdmRz//afXUFbZJK/+1ZexLau4PK/buDj89O9KjgB1B/KEusI7
      x/RZxq6YA5SG9EzjByjErm+48RevCn4xyGvS/8kL6s+xSeubMivhsft4o/cMrnXmBEMOGxc6
      2lZtvumZ2Wdec1CdKrnuBoNQ5zb5+0vEFMAaCCEozJ+tyLVkNDrERb4g/290KDeRKN8P/tg7
      5LKunST/XksDUffK6ZDFRbGl8rAqYKmwL9TihOYjESRpZxsYpgDWwMhOoKc2V3lsOTbiHOP7
      vK7+JX55hnK9RW67jzf3rC2CtCzzN3u6ECss8erJFPll3iAVA+tKhac2iCRDywsJLNYdXn8d
      UwCrIwSFyKewgZ56PSQgIAY4I/07jqq/xiqVlxjjtnl5s/e1NUVwxevmdlPDiu+lp5eaQcUS
      KZXzh9Ttz+H0VyZYsNqYAlgFARQin1T1HgoFusRHvK38G9qUvrLOdT9aJ1hNBEKS+EFnG1mr
      9Zn30tOzz5hBlSqW624wCHbuIH//KghhoCXmTAGshpEZReTXzqmtFA4R5kW+yxn1r/DJK7sw
      V2I9c2jOovLz3mfDJPRUilxyaQ9diWK5Fhe0HI0g7YCqcishhIGeCpOduEmq75dkHp43BbAa
      hejVLb2fBARFP29I/4bD6m+wSKX5zd0275oi+HUowGTtszvJLw+R3myRLEkp2v2qZWfZ/UII
      9Gyc3PRd0v0fkH5wlsLcAKJQnAeZAliB4vB4Z1vurZCnR3zA28q/pVl5QCmT5LVEoEsS3+vp
      Ql+2CXVmWabYZvMC6vbncG64mFVlEUJgFDLk5wZIPzhL+t4H5KfvYmQTLP8+TQGsgChEMTJj
      2/oMTjHHS/w/nFa/h0deP2fWbfPy1p4zuG3Phl48cNq51LE0b0BPZ8jGnlazcCobn+x7mgyC
      Hdtv9xtajsLCMJmHF0nd+QW5iZsY6TBrdSKmAFZgduwTHg4PE4nFKGjaRkvPbxoJqBe3eVP6
      3zmgnkddZ8HKZfPyZu8Z3NZnRfCT5kaibteS1zIzc0+ahkVoWDZQLt3qhubD22f3C71AITpB
      Zugyqb5fkh27ip6cpVT38q4KhZgee8iDiRgNPivBlk5UScLjfrax3D7/rxi7+0MAFEXB5XRS
      4/Hi83pxOZ3IsrLlWVQASamB2+JrTOmdrBVSkczFOfvgAsnc0lqip2IJ/ujqzSdnynY7za+f
      RkIUy6VPOohnjJJDISQFOk7Hcfk2vnvORhCGjp6apxAZR49PI7SNVdqDXSaA87/+GYH2Q0w/
      +Ji8GqKxpY2jB7qXNCUhBBf/5tskwg9WvIaqqHjcLnxeHz6vB5fDWdFtO9dDIDEtHeGW8RVS
      xuqZYCuJQBKC/+7+IPsXVbQOnTqBw+cBAZfnHczESxdAw5EcwbYqlzR5hBACIx2hEBlDi00+
      mcRull0RDfqYzu49XLl9i7de/yIDd65ze2CIo/u7l3Sm+WyEdGJi1WtoukYkFiMSK+73ZVFV
      vB4vNV4vXo8Hh91eVUFICBrFDUJSP/eVLzKgv4S+ws/ofmQOffTg/BMRCEniv3S18y/nw9jy
      RS9Temq6KAAJnJbS+0Jvi05ta7QyH2oVhBAY2ThadIJCdByRq3wyza4aAXKZFJmCwOMqBpSl
      Ulk8XveSESAyfY3LP/3DDV1fkiSsVis+j4carw+v243Vaq2aIASQlJq5Jb7GjN7GSmZRKpdY
      IgKAr83M8fW++0gUzaCm115GliUGkjbuzKwfDWp1Q/dr8yhq5RNphBCIfBotNkkhMoaRiVGJ
      nOvV+NyPAIahYwhQFQWbw4VtkafQu0L9/ER4YMP3EkKQy+WYzeWYnZ9HkiQcdju+R/MHr8eD
      qigVE4TE47zk/8CE+iJ39HdJi6UTXZfN88xI8Ku6IC9OzdIciWJks+TiCRw1XpzPLho/e08F
      Wl6MV7TxCyEQeh4tNokWGUdPLSwpXVJNPt8CEAaXzn6Iq74dv83AV9/K1NAATa0tJAsQn5ul
      o7ONSCRKPBKmY+8BkpESy4+XcnshSGcypDMZpmZnkACXy0WN14vP48XtdqMqm4/ClDBoEZ9R
      L/fRzzs81E8sScB5LIKzD86TyKXJS8VE+n/+6XVkwyA9PVMUgKQDaz9Pw6EsTm9lJr1CL6DF
      Z9AiY2iJmS1r9Iv5fAsAHYu7lkNtHs7fnEKZuITL7ufmpxfJ6oKBiXm6pmbo6e3hXn8f3oYu
      UvGRqj2NAJKpFMlUivGpKWRZxuNy4/N6n0yoZUXZsD/dQpqDvEereo1bxleZM1p4bBa5bB7e
      2PM6Z++fI5FL0+9wcKm9lVeHRsjMzGLs6cZhldb0bvladQItpe11vBpC1554cLT4NOjbmyn2
      +RaAZKE56OL2aAK/msHf3suVC5/x2ttnEAis9j569x8gFPAxV9+E22khE199AlxpDMMglogT
      S8RhojihdrvdT0YIh92OJMtlCUICfGKU09K/Z1x9aUlessvq5o1FI8GP25o4MjOLJ50hG43j
      CNSgqiuHVFg90HRwY/H9wjAwMpFio6+gB6cS7KpJ8HoIQ+dXf/kqemFr/dqrYbVa8brdRZer
      x4PdZi97/SGPm7t8hSH9KOKRlFK5BGcfXCCRS3E6EuOf3riDq6WZ4P5ePppxUTMfWzIJlhTo
      ei2Ow1P69/LUgzNOITpRFQ9OJTAFsIhcJsyH3/0iwtiZuyfabLYnC3LleJgEEJM6uGl8/VFe
      MqTzyeLEOJvin98dYP9CmOY3X+WzeTvW2aVeoKZjWQIt67s8ix6cFIXoBFpkHCO7OXNpKzAF
      sIhkdIjzP/zWtkzGyuWJh8lbXIPwuNyoqrqmIAxURqWX6dPfJCccRRHcP48nEeVffHqN5sMH
      GLQ0o40lngjA16bTcnh+VdNHCIHQsmixqaIHJx1+Lr6/x5gCWER05iaX3vv97X6MDSHLMi6H
      84kg3C43srzyfmdZarjLlxnRD5HMpTj74DxvDQ/x7USKePsh4iMZVAQ2L3SdftbfL4QAQ0OL
      TxXDEZJzsMEtYLebz/ckuEy0HWL7bwTDMEikkiRSScanJosepkUT6mIMU9E1aifKMb5Hu9rD
      DfnrvLnnDBeBE1eu0myTiQOSCq0vxpY0fmFo6Im5Rx6cqeJ2pM85pgAWoWvPrwCWYxgGsXic
      WLwY8qyq6pIJtcNuJyAP8Lr0fzDifBXb3pP8XTrLn0TmQXbQeDiD3Z0pBp6lI0VffWxyU4Fn
      OxFTAIvYqZPfSqBpGuFolHC0OJm1Wa143R58Xi9N3l/SYL/JleNvcPfGDN3WDL7AKNnJMbTo
      BCK/MxJdqoEpgEUYz9HkbXNIaIZKPAWpTJ7Z2QRuu8yRmrOE97eSHesnMnIFW3aLd3DZBkwB
      LEKWt3nLRECSFGTFhiJbkbEgY0GRbaiqE0VxoMoOFGyokh1VdT16zY6C/dFrS49TWC3AR0JC
      wpAEA4VxLqZu8DCRJjTlQMucofF4DxHrPHZkgvEooUSUUCKGP76AK51AFs/npHc5pgAWISvl
      C0CSFCRJLTZcFCRJKTZA1VlsmJIdFRuK4nz0mgNFshcbseIoNmLZjio9arCS5ck1ZUlBQgZR
      3u716yEQhI0El9I3+W3qOlO5Oep9R6hzvUzmxmfEPQc5Pt2KJWRj2jnFaE0NozU1ACgCHJpG
      MJkglIgRSoQJxOax5zLIz6EnyBTAIqwWH37XARTJtqh3XdzjOosN+VHDVoQN5XFvLVmRJQsy
      KlKls2MrcDkBaOhcz/ZzPnWNvvRDCqKALCm0Bl7D69iHMTZJIZ1hQhgkchbqZuuw+q2M+cYQ
      UtE81CVIWlSSfj/Dfj/QgYyEJ5elNp0mFI8Qii1QGw9jzaXhyfrzzsRcB1iEEU+jX61cNOhO
      QAAj2jQXU9e4nLpJXHsakqDKNjqD72C3NCMbBqkPz6Nrgn7rCxxrtnKqqdg00p4Mw7WDaGUU
      z5KQ8OU1gskoodgCwXgEfyqBPRNf/+QtxBwBFiGpW7VZVvWJiRSfZvo4n7zCaHYKY1mJR4el
      hvbad7AoxZpB+tgEWiaDrjjQBfTN6pxoVFAkgTPhoKfQy3DdEFmltOrWAkHUqhAN1DIQqAVA
      NQQezSAUWyiOFMko3kQUWy61baOEKYDFqApIEttWBmKTFNDpL4xwNvEZN9P3yRor++y99kZa
      /V9ElotRopKuk3k4BIAuJAwBqZzOSEylq6b4XVizVrqnehipHyFp2Zh3SJMlIlaFSKiO+6G6
      4nUN8OayBBNPJ9q+2ByqVtiSShOmABZjUUCWqOgu2FVGALNGhPOpa1xK3mB+nb0Mgu5eGryv
      I0lPf3oxPoWWLi4CqpanjoDbszqdvqc5AkpBoXOqk4m6CcL20ks4rkVehnmHnXlHA/fqisV8
      Lcj4UwmCyTihRIxgPExNfAFFr3zVOVMAi5AkCWwWSO/81c6UyHIt18+55FXup4ceFTZZHQmJ
      pprjBFwvsnhWLes6qYGn8x5JUZ+k4I5HNaJ5G37bU/NJ0iVapluwBW1MuSYrMkFfTgGDWZeL
      WZcL6htBgAUIpNOEkjFCsTC1sQW8mSRqYWMbjjzGFMAyJLsVsUMFoKEzWJjkQvo6nyVvkdJL
      SyxRJJW2wBnc9l6Wt1hjfBIt8/Q6QlKeCMAQcHdOcLpl2QUFhOZCWAtWxmpGMaQqLyBKUABm
      XE5mXE6ob0QCbJqOP5cjFA8TioUJJiK40kkULVeyLk0BLENyWhEb3xGp4ggEUZHkt+mbXExe
      YyI3U9b5FsVOZ+272CwNLG/8siFIPVjq9dLF0mKB/fMaJ5pUrPKzI4wv6sOq9TBUO4i2yeK6
      5SKArKowpTqZcjmhsahSp27gT6eLE+1HcwpncgFJrOyONQWwHOfqe+1uJXk0rmfvczF1nZup
      /me8OKXgsgZoC7yLqvhWfF8fHUPLLjUhcjpLCmamcgbDMYk9/pVNLEfSQY+255GHaPtTHdOK
      TNrjZsLjBopbwjoNmdpEmFC8KIhAIoI7FUUShimA5UjutfffqiYGglFtmovpG3ycvElM23gs
      To2jlWb/28jSypvqybpO6uGz2z8VDOmZirG3Z3R6/asv71mzFnqmehipGyFh3Vl+foC0bJD2
      1TDmK65mywIcukEwGTMFsBzJbgVFBn1rAuMEgoTI8EnmNheT1xnKjq87oV2POhqGMD8AABJX
      SURBVM9+6jynl3h6lmOMTaBlnp1AKuqz4SBTcY1w1katffXvRC7IdEx1MFU3xbxjazYW2SiG
      BClVJlXjNwWwHMmigMMKyc15F9ZDx6AvP8S55FVupO+RMzZfHkRCotl/Er/zKGu5Z4q9/9DK
      7ykqLAvpEQLuzBqcaVvb6SMZEk0zTVhrrUy6J6riIao0u0oAhpbnR3/9Azq7e+gbCXPySA97
      enuXBppJErLPhVEFAQhg2ljgYuo6v03eYKFQucKyqmylLfAGLtvalaMB9NHxJZ6fJc8orbwa
      fn9e5+WWlSfDSy8AwfkgVs3GaM0IhrSzA+R2lQBAp8ZXQ06otAQcDA3cI2eoHNnXteQoyeeE
      icos9MAjn322n/PJqwxkR9AqHEpsU1101L6LVQ2xXuOXdZ3kKr0/gCZW3jIiWzAYiMCB2tKe
      yRv10F3oYTg4SEHeWdsmLWaXCUDC6XLT0dWLVdKIzY7hCAafPcrn2nRIhIHgoTbBueQVrqT6
      SOnVSbd024K0Bt5FlVcvlb4YfXQcPbv66JZfY+rTN2uwLyAhl2jaOFJ2erRehuuHyOwAD9FK
      mNGgKyCEQL/6EJEo70cTQNiIczlzi/OJK0xVeZdJv7OD5pq3kKQSqtryqPf/zTn03OoLfWO2
      fcTlZzfVe8x3Dlupd5bXZAxVMFo/Qty68+oEfa5HgEI2ztmzl9l37CQt9TXPvD8wOEhdrQ+n
      pxZ10cgvSRJSwFOyALIiz+38IOeSV7iTHkAT1V8UavAeIeg+ibSKzb4S+sj4mo0fQFUta+4N
      3jcnqG8v+ZYAyJpE+1Q706Fp5pyz65+whXyuBSBJMmAwNTyAkQ4xMzzIVC5OyFfPbHge1VkL
      2SRDQx9wbSRFuyvP8S9+h57mAHLQizGy+o9lYDCmz3ExdY2Pk7eIalvj/5YlmZaaV/A5D1KO
      m0XWNJKDq9v+j5FUC6zhkBqY13i5xYJDKW8UkAyJxtlGrAErk54JxAZqjFaDz7UAEAaKakGI
      AtevXyfocqJjRaGAkC0E/F5Ui4y/roXTdU7s2Xli0Qg0B8BtL7pDM0tbw2Of/fnkVYay41v6
      cVTZSkft29itK2+GsRbr2f6PWc0L9JicJngYljgU2kADFlC7UItVszHiH6p+DFEJ7Ko5QC6R
      QPJ4MFIJVIdnidnzDEKgj8xiDM9SQOdufogLqetcTfZREFvv1bCrHjqCX8KiBCi38cuaRvLD
      8+uaPwDjvpPE8muLoNal8I8OlVe1ejlZZ5bh0BB52SyPvmXYPI88Ja4SPCaShBF085M7P+RC
      /Cpz68TZVxOPvZ5W/zsosmv9g1dAHxkrqfED5PT1m/VCSmc6pdLo2ngPbk/b6ZkuZpml1e0r
      SGbuE7wGqsvJPXV6Wxt/raub9sBXN9z4Ze1ptlcp5EtMBroza2w6X0vNqXRNdePLP+ug2CpM
      AayBJEl8cc+Xt+3+Tb4XafK9XbKbcyX0kVH0fGlmhqpaKNW8erigkdE233xkTaZtqp26dP2m
      r7Wh+2/LXZ8jXmg5TtAV2tJ7KpJKe+B1at0nQNr4TyQXNDIleH4eIykKpQqgoAv6FyozfZQM
      aJhpoCXWhiS2NoDIFMA62C0OvrCFo4BFsdMV+hIexz42G01WtP1Ln2QKSSnrlnfn9IqmTwfC
      fjrD3Shi66pzmAIogbd738Fp3ZgNXg4Oi4/u0DexW1o2XVyr3N4fitlgooweOJzSmUxWtsd2
      x110z/ZiNaqfmORQXKYASsFt8/Du3q9U9R4+exNdod95Uqdns2jDpdv+jylswKlzZ7byXnR7
      2kbvVC8urbqdzvHQK6YASkGSJL68/xu4qjQKhNx7aQ18GVmqTDaaXCiQHRou+7yCIZWdjDMc
      1kgWKt+MlLxC52QX/lyg4tcGcFu8HK09aQqgVLx2H1/e/42KX7el5qVHdXoqV5laGx4ru/eH
      x9lg5Zk0mlGcDFdjNVXWZVqmWqlPNVDpG5wMvYZdsZsCKIev7P8mIXddRa6lyCqdwS/gd72w
      KU/PcuSCRrZM2//JucrG1kXvzOhVK6YnCaifract3l4xD5HfVsuhwIuAOQkuC6fVybeP/uNN
      X8eqOOkOfg23rZtK5w1qQyPohY2Fagh5Y96XeFZnLFHdplQTrqFroRvV2HzwwusN72KRi2sr
      pgAAhCCVTJIvFMjm8uj66hlbr3Se4WDD4Q3fymUN0B365op1ejaLnC+QGR7e8PnLawKVw+0q
      jgKPcSVcdM/2YNNXrnRRCt3efXR79z752xQAkI/P88G581y/8im//PAcAw+HVz1WlVX+8OSf
      om5gN5kaRwudwW+uWqdns2jDoxj5jQfq5TeRqTka1UlUYTK8HFvGRs9UD66Cu+xzLbKVtxq/
      8ihMvogpAECoKjZRwLA48NptPLj9CXcGJ1Y9vtnXyreOfKese9R7DtLi/zKSVB3/tpwvkNmA
      52cx+RIC4VZDNwR9c1sT3qwUFLqmughkS0xQfsTp+rfx2Za6mU0BAKrFjsfrZ9++Axw7dpi9
      +w7SVP9srvBjJEni6wd/l57g3lWPeXIsEq3+V6jzni4re6tctKERjA3a/o9RLJvzRPXPG2jG
      1oQyPC7S25BsLMlD1O7u5oXgqWdeNwUAKFYHp8+cocZlw19TQ++BI/hda/fUFsXKn77y5zgs
      q/vuFdlCZ/AdapyHqeZXXYneHza2R9piElmdka0sDCegbq6O9ljnmh4ih+LknZZvoqzQAe06
      Ady/+Qnv//yXRFNL4+NHRkbLvlarv50/eOlPV3zPprrpCX2jpDo9m0UbGsbQNp+HvF42WCnc
      nhVbvr+IL+Kle74HVaws4C80fx2fdeUV9l2VEAOQTqXRtAJ3b14hPD2J6g+RT6SxKHki6TRT
      /f3UNfj53vu/5Rtv7Cel1nL/4w/pOXqSu/eG+G///E9w255+bWe636R/to+PBn795DW3LURb
      4B2UEkuVbAY5nyc1PFKRa2kV8LOPRwvE8jZqbFub7uhMOoslWJYV6T0efIU9voOrnrfrRgC3
      x4NNteH1elDsHur9XuwuD3sPHsUKeLwONMnKayeO0djRjV1VOHL8JD093ezraiavLXWVyJLM
      H7z0J3QHe4FiqZKO2q9vSeOHx7Z/ZapQ5CtgvwtRrByxHXm21qyF7qluPIXid9/m7uK1hnfW
      3GJ2V+UEV5O55Cz/7uJ/RlX2VnWyuxg5lyfx4bmKmD8Aw/ZDpKTNC9dplfmnR1Us65VRrBJC
      FsRbk3z54D/AbVn78+y6EaBahNx1/Mkr/wyHZeOLNOWiDVbG9n/MZifBj0nnDQaj21cZ16ra
      +VLXt9Zt/GAKoKI0eWv45qGjKHL1v1Y5lyezgYn7qkgSslK5katvtvorwyuhKApHT76Mx1va
      YqMpgArTFQjytf2HkdewOytBpTw/i6mEF+gxU3GNhezWNi9Jljl0/CX8tauv4SzHFECFkSSJ
      gw1NfHX/YZQqiUDJ58kMVcbz8xRpU7FAyzEEW7YyDCDLMoePv0RdY3N551XpeXY9hxqa+Mr+
      QygVDHV+TOHhMMYaAXsbQYiNZYStxf15ndwWrAzLssLhE6fKbvxgCqBqSJLEoYZmfufQUdQK
      zgnkbK6ytv9jJKnkmkClki0YPKzcHiAroqgqR146SaihcU1352qYAqgikiSxt66Bf3j0BI5N
      xtk8phq2P5RXE6gc7swYVZsM2+x2XnzlNUINTRtq/GAKYEtoD9TyT148Ra1zcznFcjZHuhq9
      PxvPBluPmYTGXBUmw26vlxOvvUFNoLyI0OWYAtgiQm4Pv3/8ZToDpXsolqMNDiO06uy5tdFs
      sFKoRBnFxYQamjjx6us4XeXnBCzHFMAW4rRa+c7R45zu6C7bTarkqtf7w+p7g1WCgXmtpKK7
      6yFJEj37D3LkpVNYrJXJq9h1wXCVR3D18nlsviCjwyN0d++htasLh7ryD67IMm9076G1xs/P
      7t4iWWLV5vzAEKLCnp8l1zeoWneY0wQPFuDwJuoJ2B1ODr5wnECoMkUJHmOOAJvFKDA2MUs4
      GsemSgwOPeRO3711T+uqDfHHL73KvrqGdaeeciZLZnSsMs+7CpvJBiuFvjkDYyN2kCTR2NrO
      qTffXtL4haEzNTVNLpsmEk+S30AZGDBHgM0jW+jqaCYuHBw53Eo4GiGWK+2Xdtls/M6hY9yd
      meI3D+6RzK88GhQGq9v7w8o7xFeS+aTGdMpGk7v0xQab3cHew0epa3zWyzMz3M/N/hFSOnhc
      dpoaWti/r6ds09IUwKaROHz8lSd/BRvKXIl8tHLcGQhyfugB1yfGMBb5DeVMluRo9bdikhV1
      zc3xNosA7swZNJUwb5VkmdbObrr27sNiWbk0vCHJKAp0tneTjEYZvHkeq7+O3obyCg6YJlCJ
      ZKMz/PJXH5LIPpt3q+dS5LRiow1HiptppJPl7XritFp5d88B/uDEy3Qscu0VHla/9wcQUvX7
      wofzGmlt7R66tq6eU2+8zZ6Dh1dt/AD1Le243DXs7e7k6OED7Dtyitba8r1CZj5AiYQf3OY3
      w7Ps72jHYVHRUmFSOsyOTdPR3EBSVkhmBEZ8DEtNKyG3lbnJMdwNHSSmh3D665iaGOftL38D
      5zrWhiEEQwvzXLh7mwc/fb8qC1/LSbk7GNYbq36f1zqsHKt/tsnVBGrp3ncAfzC04UWtjWCO
      ACVj4/U3z5CaG+NX5y6Tx0pLYy0HDx8lMTNNppDn5p27NLR2U+uxkUzGCTZ1Y5fihCN5wuFZ
      Job7mYutv1OjLEl0B0P8/unX+a/+8I9o6+ys+qer9iT4MXdm9SWT4ZraIMdOnebEa28QCNWt
      2fjTc1O89/5P+OTsR0xlDIQQGMay/wuBEMV/l4I5AlQdnUtnz9LUe4T2po0tggkhGH74kEsX
      znGvrw9tk+VPVmLa2smC0lDx667E7x128uKeBtq6evDW+Evu8ZNTo/zi009pd7kYjCXx1zSS
      y80jCjYMI4OsZ+ibyrLXp9H0whc5dahr3WuaAniOEEIQi0a4+uknXL9yhYW5uZJ7uvWYc+5h
      VmwurGAtJAlaQz7efKGdt17owO9xlG3qZKNRMlYrzkyUlGpldjbGyPAgHd37CHkUJiZniObA
      r2QR3iYO966/pb0pgOcUXdMYHxvj5rWr9N26RTwW3ZQYFjwHmNYqW7JRkqDO7+KVg628cqCF
      npYAqrKzrG5TAJ8DDMNgamKCB/fu8qD/HuNjYxTKXBha8B1hOr/5DUBsFoW9bUGO9TRwrKee
      zkY/srx9+cHrYQrgc4YQgkI+z+TEBCNDg0yOjzMzNUU0GiG/RtjFjPcY84Xydqhx2izU+hy0
      1fnY01rL3rZaOhv82KzKlnpyNoMpgOeQ+akRLl/+jEBzO3anh4ZaH02Nq09gDcMgk8kQj0aJ
      hBeIhMNEwmFSqSSZVJp0Os2I3Em0YEHTi6thFlVGVWTsVhWP04bHacXnslNX4yTkd9Hgd1Pr
      c+CyW3d0D78epgCeR4Tg9q0bWFWZoYlp9LzO6+9+Cbdl59jX6dgcFy59hqcmAFYXnc1BGuq3
      xstUDjvnGzMpGSEKWO0+evftp7erB4ueIJXfWf2Y0xdib1cLHq+H8OwEt2/cZCGeWf/ELcYc
      AUyqg9C503efgwf3M/jwISP3b9By+Ay9LaHtfrIlmAJ4jtCyCS5c+oxjJ09Ts075dpPSMAXw
      HJGYnCSiaIzeHyOX19nT3ci9oQkO7u1meGyeOq+K6mukY4MrzhvB0AssRBKEgtXZz7famOHQ
      zxUan352ixc7WvjBj94jb7yOx6HxwQfnSOYNThw7wol91VvNXYn5sQdcGU3x8t4UD6fiKPkY
      NXWNzM7HCbhAcgWZGxqgc08P/QOj7OtpJRoOU7D7SEyP09rWwsR8klMvrF7CvJqYI8BzhKHr
      GJKEInRm5yPo6QSGx0+D18FCNIXf78NaofIrpfLBz99jbDpG194eulubGJqcIzU1yHQKulrq
      MGxOokP9CE8jPSGVoZSTLxxv4/zHn3Gnf4oTLxxiaj7Bd373S9vikTEFYLIp0pk0NkUinSsw
      F05gI4fdU8P8fJQatwXsXhJzUzS1tjIxNUdbcwNWi0I6rzM5MkSwvo5wPEt3e/lV3SqBKQCT
      XY25DmCyqzEFYLKrMQVgsqsxBWCyqzEFYLKrMQVgsqsxBWCyqzEFYLKrMQVgsqsxBWCyqzEF
      YLKrMQVgsqsxBWCyqzEFYLKrMQVgsqsxBWCyqzEFYLKrMQVgsqsxBWCyqzEFYLKr+f8BjvGt
      yh5QPwsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
