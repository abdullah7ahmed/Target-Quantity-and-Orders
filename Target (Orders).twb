<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.23.0209.1653                               -->
<workbook original-version='18.1' source-build='2022.4.1 (20224.23.0209.1653)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' inline='true' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='7276Data-Set-Spring-23-revised (1)' name='excel-direct.0m1txh01sm7o7j1azvtu910fxcjh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sabdu/Downloads/7276Data-Set-Spring-23-revised (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0m1txh01sm7o7j1azvtu910fxcjh' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:Z40102:no:A1:Z40102:0' header='yes' outcome='2'>
            <column datatype='integer' name='Orders' ordinal='0' />
            <column datatype='string' name='Ship Mode' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Category' ordinal='3' />
            <column datatype='string' name='Sub-Category' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='integer' name='Quantity' ordinal='6' />
            <column datatype='string' name='Order ID' ordinal='7' />
            <column datatype='date' name='Order Date' ordinal='8' />
            <column datatype='date' name='Ship Date' ordinal='9' />
            <column datatype='string' name='Customer ID' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Segment' ordinal='12' />
            <column datatype='string' name='City' ordinal='13' />
            <column datatype='string' name='State' ordinal='14' />
            <column datatype='string' name='Postal Code' ordinal='15' />
            <column datatype='string' name='Market' ordinal='16' />
            <column datatype='string' name='Region' ordinal='17' />
            <column datatype='string' name='Product ID' ordinal='18' />
            <column datatype='string' name='Product Name' ordinal='19' />
            <column datatype='real' name='Sales 1' ordinal='20' />
            <column datatype='integer' name='Quantity 1' ordinal='21' />
            <column datatype='real' name='Discount' ordinal='22' />
            <column datatype='real' name='Profit' ordinal='23' />
            <column datatype='real' name='Shipping Cost' ordinal='24' />
            <column datatype='string' name='Order Priority' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0m1txh01sm7o7j1azvtu910fxcjh' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:Z40102:no:A1:Z40102:0' header='yes' outcome='2'>
            <column datatype='integer' name='Orders' ordinal='0' />
            <column datatype='string' name='Ship Mode' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='Category' ordinal='3' />
            <column datatype='string' name='Sub-Category' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='integer' name='Quantity' ordinal='6' />
            <column datatype='string' name='Order ID' ordinal='7' />
            <column datatype='date' name='Order Date' ordinal='8' />
            <column datatype='date' name='Ship Date' ordinal='9' />
            <column datatype='string' name='Customer ID' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Segment' ordinal='12' />
            <column datatype='string' name='City' ordinal='13' />
            <column datatype='string' name='State' ordinal='14' />
            <column datatype='string' name='Postal Code' ordinal='15' />
            <column datatype='string' name='Market' ordinal='16' />
            <column datatype='string' name='Region' ordinal='17' />
            <column datatype='string' name='Product ID' ordinal='18' />
            <column datatype='string' name='Product Name' ordinal='19' />
            <column datatype='real' name='Sales 1' ordinal='20' />
            <column datatype='integer' name='Quantity 1' ordinal='21' />
            <column datatype='real' name='Discount' ordinal='22' />
            <column datatype='real' name='Profit' ordinal='23' />
            <column datatype='real' name='Shipping Cost' ordinal='24' />
            <column datatype='string' name='Order Priority' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z40102:no:A1:Z40102:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Orders</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Orders]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Orders</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales 1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales 1]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales 1</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity 1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity 1]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity 1</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B236C7CB2A284F129F732F9079BBDFE7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='% of Ship mode' datatype='real' default-format='p0%' name='[Calculation_1076923269750743040]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_1076923269755322369]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755510786]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755731971]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Orders (Orders)' datatype='integer' name='[Orders]' role='measure' type='quantitative' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sub-Category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_B236C7CB2A284F129F732F9079BBDFE7'>
            <properties context=''>
              <relation connection='excel-direct.0m1txh01sm7o7j1azvtu910fxcjh' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:Z40102:no:A1:Z40102:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Orders' ordinal='0' />
                  <column datatype='string' name='Ship Mode' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='Category' ordinal='3' />
                  <column datatype='string' name='Sub-Category' ordinal='4' />
                  <column datatype='real' name='Sales' ordinal='5' />
                  <column datatype='integer' name='Quantity' ordinal='6' />
                  <column datatype='string' name='Order ID' ordinal='7' />
                  <column datatype='date' name='Order Date' ordinal='8' />
                  <column datatype='date' name='Ship Date' ordinal='9' />
                  <column datatype='string' name='Customer ID' ordinal='10' />
                  <column datatype='string' name='Customer Name' ordinal='11' />
                  <column datatype='string' name='Segment' ordinal='12' />
                  <column datatype='string' name='City' ordinal='13' />
                  <column datatype='string' name='State' ordinal='14' />
                  <column datatype='string' name='Postal Code' ordinal='15' />
                  <column datatype='string' name='Market' ordinal='16' />
                  <column datatype='string' name='Region' ordinal='17' />
                  <column datatype='string' name='Product ID' ordinal='18' />
                  <column datatype='string' name='Product Name' ordinal='19' />
                  <column datatype='real' name='Sales 1' ordinal='20' />
                  <column datatype='integer' name='Quantity 1' ordinal='21' />
                  <column datatype='real' name='Discount' ordinal='22' />
                  <column datatype='real' name='Profit' ordinal='23' />
                  <column datatype='real' name='Shipping Cost' ordinal='24' />
                  <column datatype='string' name='Order Priority' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_8151AC1611DA4ABEBDD432E43CAB58A9]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Country- Hist.' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country' />
        <param name='target' value='Country- Hist.' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Category - Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755510786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755510786]' derivation='User' name='[usr:Calculation_1076923269755510786:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' />
              <wedge-size column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755510786:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7251380681991577' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{13FAB4E3-84D1-47FE-AAE1-0C4456AE2EB7}' />
    </worksheet>
    <worksheet name='Category- Freq. Dist'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755510786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755510786]' derivation='User' name='[usr:Calculation_1076923269755510786:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755510786:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Office Supplies&quot;</bucket>
              <bucket>&quot;Technology&quot;</bucket>
              <bucket>&quot;Furniture&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3408A6DE-C7E5-41F2-A6E0-4346BCA1FBC8}' />
    </worksheet>
    <worksheet name='Categoty- Hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755510786]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755510786]' derivation='User' name='[usr:Calculation_1076923269755510786:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755510786:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]</cols>
      </table>
      <simple-id uuid='{CD928FB0-01F3-4047-990A-EB48D3AFC2A7}' />
    </worksheet>
    <worksheet name='Country- Freq. Dist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_1076923269755322369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755322369]' derivation='User' name='[usr:Calculation_1076923269755322369:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755322369:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Cuba&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Iran&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Egypt&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
              <bucket>&quot;Russia&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Venezuela&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;South Korea&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Libya&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Syria&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Martinique&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Hong Kong&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Yemen&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Taiwan&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Djibouti&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Guadeloupe&quot;</bucket>
              <bucket>&quot;Slovakia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Macedonia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;South Sudan&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Eritrea&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</column>
            <column>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{764633CB-1511-42F3-B5B7-2602C7B09E87}' />
    </worksheet>
    <worksheet name='Country- Hist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_1076923269755322369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755322369]' derivation='User' name='[usr:Calculation_1076923269755322369:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' />
              <lod column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755322369:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.6811602115631104' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{C32C3B6C-732F-46B6-9A16-6039925CEBE3}' />
    </worksheet>
    <worksheet name='Country- Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Country' datatype='real' default-format='p0%' name='[Calculation_1076923269755322369]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755322369]' derivation='User' name='[usr:Calculation_1076923269755322369:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' direction='DESC' using='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
          <slices>
            <column>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' />
              <wedge-size column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755322369:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.6151933670043945' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4DE81D28-19DC-4C16-B0BD-AF9010D84E5C}' />
    </worksheet>
    <worksheet name='Ship Mode- Freq. Dist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Ship mode' datatype='real' default-format='p0%' name='[Calculation_1076923269750743040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269750743040]' derivation='User' name='[usr:Calculation_1076923269750743040:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269750743040:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Standard Class&quot;</bucket>
              <bucket>&quot;Second Class&quot;</bucket>
              <bucket>&quot;First Class&quot;</bucket>
              <bucket>&quot;Same Day&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{45B931F1-49D8-4ABF-851A-BF6D1C54A86D}' />
    </worksheet>
    <worksheet name='Ship Mode- Hist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Ship mode' datatype='real' default-format='p0%' name='[Calculation_1076923269750743040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269750743040]' derivation='User' name='[usr:Calculation_1076923269750743040:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Standard Class&quot;</bucket>
              <bucket>&quot;Second Class&quot;</bucket>
              <bucket>&quot;First Class&quot;</bucket>
              <bucket>&quot;Same Day&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269750743040:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269750743040:qk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{72E19C8F-0335-4954-98DF-1EC7350126ED}' />
    </worksheet>
    <worksheet name='Ship Mode- Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Ship mode' datatype='real' default-format='p0%' name='[Calculation_1076923269750743040]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269750743040]' derivation='User' name='[usr:Calculation_1076923269750743040:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Standard Class&quot;</bucket>
              <bucket>&quot;Second Class&quot;</bucket>
              <bucket>&quot;First Class&quot;</bucket>
              <bucket>&quot;Same Day&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' />
              <wedge-size column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269750743040:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{61D030B4-15D4-496D-B9F6-E680CB6957C6}' />
    </worksheet>
    <worksheet name='Sub-Category- Freq. Dist.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755731971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755731971]' derivation='User' name='[usr:Calculation_1076923269755731971:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755731971:qk:3]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6EB1FCD7-EE81-4C13-9109-2B3AEACE79DB}' />
    </worksheet>
    <worksheet name='Sub-Category- Hist'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755731971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755731971]' derivation='User' name='[usr:Calculation_1076923269755731971:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755731971:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]</rows>
        <cols>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{BF095CC1-6917-42E6-9E52-6482DF79481B}' />
    </worksheet>
    <worksheet name='Sub-Category- Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (7276Data-Set-Spring-23-revised (1))' name='federated.14faq6a1tf4j5n127gzk81u1q5ks' />
          </datasources>
          <datasource-dependencies datasource='federated.14faq6a1tf4j5n127gzk81u1q5ks'>
            <column caption='% of Sub-Category' datatype='real' default-format='p0%' name='[Calculation_1076923269755731971]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Sum([Quantity])/TOTAL(SUM([Quantity]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_B236C7CB2A284F129F732F9079BBDFE7]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1076923269755731971]' derivation='User' name='[usr:Calculation_1076923269755731971:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <manual-sort column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' />
              <wedge-size column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[__tableau_internal_object_id__].[cnt:Orders_B236C7CB2A284F129F732F9079BBDFE7:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[usr:Calculation_1076923269755731971:qk]' />
              <text column='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{716A7FC6-B3DF-4EA2-AD80-7AEF2B4CA3DE}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Ship Mode- Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAFBC2A4-7280-4A47-A8E2-688C5310684F}' />
    </window>
    <window class='worksheet' name='Ship Mode- Hist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5372AF9A-8B3E-4741-93C7-B3C18A79ABA5}' />
    </window>
    <window class='worksheet' name='Ship Mode- Freq. Dist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</field>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6F58B2A6-E901-4538-A22D-717C13DA7913}' />
    </window>
    <window class='worksheet' name='Country- Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8325E123-B90B-48C5-9C7C-04440DDA1051}' />
    </window>
    <window class='worksheet' name='Country- Hist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' type='color' />
            <card param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{33245A3E-7837-42A5-AF2C-79E50D08D292}' />
    </window>
    <window class='worksheet' name='Country- Freq. Dist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</field>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E63965A3-468E-4B62-8648-CD6F9865E600}' />
    </window>
    <window class='worksheet' name='Category - Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{41C90790-EE67-441E-B4D3-D33A9D617D27}' />
    </window>
    <window class='worksheet' name='Categoty- Hist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0ADDF33-27D3-4618-8A03-65642FB85F03}' />
    </window>
    <window class='worksheet' name='Category- Freq. Dist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</field>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C649BA21-B015-4611-B92C-D8E24B3F86B8}' />
    </window>
    <window class='worksheet' name='Sub-Category- Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F1093906-0018-48E4-8001-D82723D7031E}' />
    </window>
    <window class='worksheet' maximized='true' name='Sub-Category- Hist'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5405EDBC-3063-4B66-BE9A-E6ECBE6DD824}' />
    </window>
    <window class='worksheet' name='Sub-Category- Freq. Dist.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[:Measure Names]</field>
            <field>[federated.14faq6a1tf4j5n127gzk81u1q5ks].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E4D280B-4EBF-4491-9F14-4DEEDBCBB47A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Category - Pie Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUQElEQVR4nO3dfXAcZ2HH8e+zu7f3fjq9W5Lf4ndiJ7GdhDQJGRoaIDBMoSHQ8tJMaSh0
      mGnLP7xMKBQYyjCdYTrQKQQIL4WSQkhCmhcK5MU4Jk4cEhs7tuUX2ZJlybZ0upNOp3u/3ad/
      yI4VxbZeLN3e7T6fGf0R3enup/h+2t1nn2dXSCkliuJRmtMBFMVJqgCKp6kCKJ6mCqB4miqA
      4mmqAIqnqQIonqYKoHiaKoDiaaoAiqepAiiepgqgeJoqgOJpqgCKpxlOB1AWX7likStWmMgV
      SaRzJNN5MrkiE/kSmXyJXKFMxbJf/fr7yCNEjQJCM8EXQJhhRKAREYxPfoWa0WJdiEADmGGE
      7nP6V5w3VQAXsaWkUKrQd3qM3tNjnBxOM5AY50xqgkyuRKFUmdXr5Jt2EdLHZ36iGUYE4mix
      TrSWtWgt69Bb1qI1rQYzhBC1v4OhClDHpJSMpHMc7EuwvzdBz2CKk0NpypZdnQClLLKUxRof
      xBr4w/nvaz601nXoHdegd25B77gGEe1ACFGdXHMg1Iqw+pIvljlyMsmu7kH29gxxOpnBshf2
      n/AbTd+keTZbgNnSDLSmVRgrb0ZfeQt6+0aEGV64178MqgA1TkpJsWSx99gZfv9KP/uODTM2
      UVjU91zwAkwjQi3oV7wJ37rb0buuRRgBcGjroApQo6SUHD6ZZNvuXnYdHGR0kT/0Uy12AaYS
      4VaMNbfh23QHetsGoLpFUAWoMZlckef2n+TXu3roPT3mSIZqFmAqrX0TvqvuxLfu7Qh/tCrv
      qQpQA6SUJMZy/OqFozz18nEyuZKjeZwqwDki1IJv03vxXf1+RKRtUQ+eVQEcJKXkVDLDw88e
      4vf7+mc9TLnYnC7Aq8wwvvXvxLz+bkSsa1GKoIZBHTKUmuCh7d08vbuXSrWGLetNKUv5lV9Q
      7n4U38Y7MK+/Gy26ZEHfQhWgysazRR7cfpBf7+qhWLacjlMfKkXKe/+H8sH/xdz8QczrPjJ5
      FnoBeL4A0qowmh4n2hDHpy/emctyxeKZ3b387OkDpDL5RXsfVyvnKP3hPsqHHsd/0z9grH/n
      ZU/D8PwxwHj/cV48eYYr160nGjSRVoVUOk3q9BDLVizl0NFuLN8StmxcCXaRsVQaw9DJ2SZr
      V3TM6j16BlLc++hLHB1ILe4vs0Bq5hhgBnrnFvxv+Rx664Z5v4bntwAgGUunOXjkCDG/Tilf
      Ys36pYRizfTsOYivq4nV7Us5dOwY5fQgln8Fqf49+BqXsWZFxyVHrbOFEg9sO8ijzx3GXuCz
      tQpYp/aQu/8DmNd9BPONH0X4QnN+Dc9vAcrZLBXTpDg2xL5jQ2zasIZo2EepJCiMjyGCfk6e
      HIZSmmjrEpqb2smO9DOUFWzeuPaCBZBScrAvwbceeYmBRO3/JZ2uXrYAU2nNawnc9kX0jqvn
      dFbZ8wVYaOWKxS+2HeThHd2UK/U5ulOPBQDACGDe8PHJg2Rtdjs3ahdomuGBXva80s2K1Ws4
      3tdPY1Aj0tRJU2s7XW2Nl/zZodEs//7A83SfGKlSWuU1KgVKz30Dq/8FAm//Clp05mO02p+w
      XWUNjU0s6VxOZ3szXZ1LiYRDnBns4+U/vnLRWZdSwkuHTvHpbz+pPvw1wDq5i9zPPkSlf9eM
      z1UFmKb3yCHOjCQ4sO8AwyNJVq17A1duWIehiQvu71u2zYPbD/DV/96x6LM0ldmTE8PkH/kE
      pd0/RtoXP9+ijgEuQ7FU4d5HX+KZ3X1OR1lQdXsMcBG+TXfiv/UehGG+7jF1DDBPo5k8X7v/
      OQ6pXZ6aV97/IHbmFMF3/BsiGH/NY2oXaB7OpCb4/H3b1Ie/jlgndpJ78G7s8cHXfF8VYI76
      To/x+fue4WQdju97nT1ymNyDH8UePfHq91QB5qBnMMUXfrCN4bGc01GUeZLpk+Qeuhtr5Aig
      CjBrPYMpvvSj7aSzRaejKJdJZs6Qf+hjWMOHVAFm49ipFF/+0XbG1YffNWRuhPwjn1AFmMmp
      kQz/+uMd6i+/C8nssCrApYykc3z5v7aTHFfz991KFeAicoUyX/3JDk4nJ5yOoiwiVYALqFg2
      //HwLo6dGnU6irLIVAGmkVLy0yf3sXP/gNNRlCpQBZhm+94TPLLjsNMxlCpRBZjixFCa7zz6
      MraaH+gZqgBn5Yplvv6zneQKZaejKFWkCsDkjSV+8MQeTgylnY6iVJkqAPDCgQGefrnX6RiK
      AzxfgOR4ju8+pvb7vcrTBZBSct/jexjNqKWMXuXpAuzqHmTn/pNOx1Ac5NkCZHJFvv/4Hqdj
      KA7zbAEe2t7N8FjW6RiKwzxZgP6hNL964ajTMZQa4LkCSCn5yW/3qmvzK4AHC7D/+DB/OHTK
      6RhKjfBUAWxbcv/T+1FD/so5nirA7iOnOdiXcDqGUkM8UwDLsnngdwecjqHUGM8UYH/vMEf6
      k07HUGqMJwogpeThZw+hdv2V6TxRgJ7BFK8cH3I6hlKDPFGA37x47KI3t1C8zfUFmMiV2LGv
      3+kYSo1yfQG2/bGXQqnidAylRrm6AJZts81ld29RFparC3ByaJzj6uJWyiW4ugC/+2OfGvpU
      Lsm1BShXLJ4/oK7uplyaawvQd2aMoVF1YVvl0lxbgBe7B9WsT2VGriyAlJJd3YMzP1HxPFcW
      YHgsy8CwuoujMjNXFuBgX0JNfVBmxXUFkFKyt0dNfFNmx3UFsCUcUKu+lFlyXQHGMnmGR9X1
      fpTZcV0BjgyknI6g1BH3FeCkWvaozJ6rCiClVJPflDlxVQEqls3pZMbpGEodcVUBsvmyuqu7
      MieuKsBIMo1pldGE00mUemE4HWAhLek/wpcGn2FcmKTCcYbxMxKKM4xJIhgnVRFYCLVGQHmV
      qwpgJRIEinkC5GkrpNkAMGVQqGL4GA02kNACJAIxEnqQYV+ElBFkVPNTslQ1vMZVBagkRi75
      uFEp05oZoRXg7B1RJWBrGhWhkw7HGRZ+RoKTW42RUCMJWydrBMjbi51ecYKrCmCNzX0IVAC6
      baNj0zaeoA0gfX4lmS008maAjO5nJNjAsBYk4Y+SMMIkjBATtqCMpnar6pS7CpBe+Btda9Im
      XMwRJseS3GsLJoFCIMyoNnmskcBPItTAMH6SwQZGK6hFOTXONQWQUmKnq7sGQADBQpYgWTpz
      56dgSEAKQdkwSYbiDIsAI4EYw3qQhBlhVPgZ10zKasq241xTACoVZLnsdApgshhCSvzlIp3p
      ITqnPCYBSzcoaAbpUMNkOc5uNRKhOCOWQV73UVLHHFXhmgLIUglp1f59vwRgWBUiVoVIukAX
      wNj5x21NZ8IfYkybPOZInD3mGDZCJIwwOUtio050LBQXFaAMdVCAmWi2RSyfIUaG5dnXjmpJ
      IBeKMaKdHakSZw/MMRn1RxmvoA7G58g9BbAtsN293yCAcG6cMLBi4vyiHwlUdIOibpIMTx5z
      JPyT5zkSZoRRfOQ0g4q7//fMi2sKgG0jPTrkIgCfVcFnVYiUcqyY8pgEKj6TrGYyGowxrAXO
      bjUmR65GLJ2i0PHqOUBXFUCNOb6eAHzlEnFKxIsTXDHtcUvTGQ9GSZ3brdKD+IV3NhXuKYCm
      g1AHh3Ol2xaN2TEagdWZIbSQJLzcOzNq3TMbVNcQmnt+HacYUQtB/Q8mzJZrPjFC09QWYAHo
      oZzTEarKPQXw+UB3za/jGD3krStquOYTI/x+hO6eQxqnqC1AnRK6jgj4nY5R17SwjhDeOQAG
      FxUAIdDCEadT1DU9VEB4aAgU3FQAQG+MOx2hrhlhb+3/g8sKYDQ1Ox2hrunhgtMRqs5VBdCb
      m5yOUL8E6KGi0ymqzlUFMFpbnI5Qt7SgjqYt/Iq6WueuAnR0zvwk5YK8Nvx5jrsK0NoCPp/T
      MeqSEfHe7g+4rABaKIQeb3A6Rl3SVQFcwDDwdardoDnTNXTTmzcVdFUBhBCYq1Y5HaPuaKaF
      8HlvCBRcVgAA84rpSz6UmegRb02Bnsp9BVittgBzZUS8+dcfXFgAvbERY8kSp2PUFT044XQE
      x7iuAEII/BvWOx2jfgiBHvTeHKBzXFcAhCBw5RucTlE3tCAIw5tDoODGAgD+K68EQy2OmQ09
      XEFQcTqGY1xZAL25GXPZMqdj1AU95N39f3BpAYQQBLZsdjpGXTDC3loBNp0rCwAQ3LpVXSVi
      Frw6BeIc1xbAXLkCo6PD6Rg1TQv5EMJ7U6Cncm0BhGEQeuP1TseoaXrQm1Ogp3JtAQBCN/6J
      0xFqmh7Je/5OA64ugG/pUsw1q52OUbO8ugZgKlcXQOg64Te/2ekYtUkT6AFvD4GCywsAEL7p
      RoRfXTBrOs0EYahjANcXQAuHCb/pZqdj1Bw9UvbsFOipXF8AgMjb3ga67nSMmuL18f9zPFEA
      3/JlBDZtcjpGTfHaVaAvxhMFEEIQe9c71Znhc4Q6AD7HEwWAyRmi/g0bnI5REzS/RPOpXSDw
      UAGErhN7z7udjlET9IiNkGWnY9QEzxQAIHDVJvzr1WoxPZTF86eAz/JUAYSm0fCBvwSP30xP
      D6vx/3M890nwr19P8PrrnI7hKMODl0G/GM8VQAhB/H13evbssBY0EJoaATrHcwWAyUly0Xfc
      7nQMR+ihPEKoM8DneLIAALF3/zlGe7vTMapO9/gSyOk8WwAtGCT+1x92OkbVqSnQr+XZAgCE
      rt1K6OabnI5RPQK0oNoCTOXpAiAEjXfdhd7kjXuLCVNHM7x5GfSL8XYBAL0hRuNH/sYT5wb0
      cBGBt+4DPBP3/6vPQvC6a4m89TanYyw6I6r2/6er+wK8vPP/+Pkvn0FK+er3Bnp7L7jU4+Dh
      Qxd8DSEE8Q9+AN/KlYsTskZ49UZ4lyLk1E9OHcpPDHK8X+f5J79PoOtq4gGIBoOMZrI0tsRJ
      JCdoD+ukKiYdLWFSp09hhqMU8gVMM0gsGqWxcyVrl7dRHhhk6F++iJ114Vx5IYhtPo5uZpxO
      UlPqfgugGyEaYgE2bbmBazauJxYO0tq1iltuvI6lK9Zw0xs3E2+K09gYp7m5hXi8gXhzG7nM
      KJbZQDIxzPLOyfsL+5Z20fSxj7py9ZgwJZqppkBMV/dbgHmRNseOHqFt2QrymTxtbedHgaSU
      pB/4BeO/fMTBgAvP1yyJrHnF6Rg1x5UFSAz20d17hmXtDQykCjSbJRo61xAMBGhqCM/489Ky
      SP7nt8jtfL4KaasjsHyCYMdxp2PUnLrfBbqQhuY2GkIGwUiEVCpJKpVg357dHD7WO6ufF7pO
      08c/hrl+3SInrR61BvjCXFmAvS88S/9IhmQiwUQ2x9brb6SrLUJP38CsX0Pz+2n95D9huOS+
      w3pI7f9fiCt3gRZSZWiIoa98FSuRcDrKvImgTsNV+xFCLYOczpVbgIVktLfT9tlPozfGnY4y
      b3qwBOrD/zoi2qEKMBu+ri5aP/MZtHh9lkAP5dQS4GlEdAnBv/i2KsBsmStX0HbPZ9GbGp2O
      MmdevhH2hYhYF8E7vovevEYVYC7M5ctp+9znMNranI4yJ2oNwHla4xWE3vdD9KZVk//tcJ66
      4+vqpO0Ln8e3YoXTUWZF+A2ENup0jJqgtW8ieOd9aLHzI3uqAPNgtDTT9s/34N+40ekoM9JD
      BRBqoM9YdSuhO76LFnntMlhVgHnSo1FaP/0pIn/2FqejXJIRKXr+ANi3+YME3vV1RCD2usfU
      eYDLJG2bid/8ltGf3g+V2rvjevgNSczYoNMxnGEE8b/5U/iuuhMhLvy3XhVgIUhJYf9+kvd+
      ByuZcjrNeUIQ29yLbnpvGaSIdRG4/WsYXVsu/TxVgIVTSaZIffteCvv3Ox0FAOGDhq3dCLx1
      EkxfeQuBt34ZLdI643NVARaYtCzGH32M8V8+giyVHM1iNEmiaz00BdoXxH/TP+Lb8qGL7vJM
      pwqwCKSUlI73kvre9yj3nXAsR2BZjmBnj2PvX01a+0YCt30RvXXDnG6EogqwiOxCgfHHHmf8
      0cegXP3dkPD6BGb8dNXft6qMIOYNf4e59S6EEZjzj6sCVEGpv5/RH/6IYveFF+UvltiWE+hm
      uqrvWU36shvw33oPevP8b4auClAl0rLI7XyesZ8/gDUysujvJ/yChmsOIYT7pkGIhmX43/RJ
      jDW3IbTLW7+tClBldjbL+BO/IvPr3yBzi3eZElceAPtjmFvvwtzyYYQ/siAvqQrgkEoySebx
      J8g89fSiHB/4uyYILXXJGmAjiHnNX+G79i608MxDm3OhCuCwysgI448/QfbZHQu6RXDFAbA/
      im/jezCv/dtZjenPhypADZBSYqfTTDz5FBPPbMMavfzZm7FrB9CNGjorPQci2oHv6vfj2/Re
      RLARsYj3d1YFqDF2Pk/+pZfJPPkUpaNHYR7/PMJv0HDNPoSovblJFyV09M4t+K66E2P1rQhz
      5svXLMjbqgLUJikl5b4TZJ97jtzzL2Alk7P+WSNeIbL+YF3MAhXRDnzrbsfY+O6zw5nVTa0K
      UOukRFYqFLq7ye96kfzefTMOo/qXZgl1HatSwLkT0Q6MVX+Kse7t6B3XIDRjTmdvFzSLKkB9
      sYslyn295HfvofDKfsoDA6+bcxTekMJsmP01kBadEUBrWYex8maMlbegtaxD+OZ+1nYxqALU
      MSkl1tgYpSNHKR4+TPFoD+W+PqKbjqObDi6D1P3o7Veid25B79yC1r4REW5d1IPZ+VIFcBlZ
      LmOnjmInj2KNHMVO9mCnB5C5JBQX+NLogQa0UDMi1oXeshatZR1ay1q0plUI3bew77VIVAE8
      QNoVqBSRxQxy/BR2dgRZGJv8yo9BOYe0ynDuS9qg6aD7JieYmeHJ4chgHBGIv/qhF/4IGIHL
      no7gJFUAxdPUonjF01QBFE9TBVA8TRVA8TRVAMXTVAEUT1MFUDxNFUDxNFUAxdNUARRPUwVQ
      PO3/AVPsBCRcT9v/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='104' name='Category- Freq. Dist' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Categoty- Hist' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Country- Freq. Dist.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country- Hist.' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARoUlEQVR4nO3dWXMb2XnG8f/pBTtAguAubuIqahuPPZJjexzb8ZKpmimXU77Jbapynap8
      gHySpJLLlCtlJ1VTuYg9XuPE9sgejWYkUbso7hRJECQBYuvukwtS1EgCJ2yIBAn2+7shAaKP
      DlT94HSffnFaaa01QgSQUkoZx90JIY6TBEAEmgRABJp13B0QL5q+9UfuLOW5+tYVquUirckE
      ylBUqxWKZYc7t65z8Y0vobXGskNYhiISjaKOu+NNSgJwwszNr/G1b3+PO7//DeVSgVwhztn+
      FCtP58mXoVQpMDB3k+srUeLuOqFQmK9//e3j7nbTUjILdLJs55b58OM7nOnpZnpumZH+dh4/
      WWGwvwOlLCqVPJZtE+kYIXvnN6iet7g83H7c3W5KSiklAWhi2ewa6XQbSskBUD2OLACu62Ka
      5mE3K8ShkusAIvAkACLQDj4L5Dncv3ePkrZpjYBjJYhQIu9YpEIeuRKMjwzKdJxoKr7OATyn
      yMzCKrigtQMG2FqzjSJhaNJnzhJSHq7rYhgyuIiTzbZt5es6wNL8Et19gzy4+TGuFSesi+Rc
      m6jtslRRdA4oTLVz8isnwaIZ+BoBtNYopfA8D1AoNBpQCrRm71NfZoFEM1BK+RsBns03Pz+8
      UXvH/DIVLZqRHKiLQGtMLZD2+PjD/2Ehr2mzyuScMBEnR7pnjHRXNwNd6YZ0Q4iXNWYEUAbt
      bWk87RJO9dLRFicRj7O8NMv1j65TcaUaQxyPxgTAc1l4uoJlhfCKK2wUPCYvXuLc+NmdE2rZ
      /8UxkVogEVi+Z4H8KKwuUVhZ9L2dHY2THho/gh4J8aojC0Axt0b28R3f20Vb2yUAomFkGlQE
      mo8RQDP94C5GrI3K5lOMWBu2kyfv2CRDLhslxfmJEbkgJpqKjwBUWF5ap+1MnEq5TDiicc0Q
      KUNTwCIT15RcvVcMt1Mu4Z/WGsdx6tpWCL98BMAm3RanUMjTEk+wkd8iZlbJOTaJkMtiWdHR
      97wYrt5qUKUUliXf1ReN4WNPMxg/f/noeiLEMZCTYBFoEgARaBIAEWgSABFoEgARaBIAEWgS
      ABFoEgARaBIAEWi+iuHuT90k3NJFKbe0tzJcwbFIhDw2S3DpwjkMKYYTTcRXMVw2WyBlbRCN
      ZQjpKhgxMiFNHkVXi6YsxXCiyfgIQIiOjhRFz6BazOLYSSJOkaxrk7RdVrYVnX0KQ4rhRBPx
      sacphsfPH11PhDgGchIsAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACzVfNwYM7
      N7ES7XiFLERbCXnbL9wmdXJsWFaGE03FVwC2twukEu1sFwvEoq04WCQtTd4zSEdkZTjRfHwE
      wCURb2E9t046kSKbyxG3HHKOTXx3ZbjOflkZTjQXH3uayfDEub1HQ4ffFyEaTk6CRaBJAESg
      SQBEoEkARKBJAESgSQBEoEkARKBJAESgSQBEoPmqOZi6eZ1oazfVrVUcK0GUEnnHIhny2CjB
      xfMTsjKcaCq+AqA9j2q1RCjahq2rYERps3dWhutMycpwovn4KoaLROIUKx7aXcOxkkQosrZ7
      m9SnBVkZTjQff8Vw4+f+/5cJ0UTkJFgEmgRABJoEQASaBEAEmgRABJoEQASaBEAEmgRABJoE
      QASar5qD3Mocj5ZLhN1Noulu3MLa3m1St0pw+fIFTCmGE03kwAHQboUH0wt4Rphk3Ka4XSQe
      S9KhNQUUPTFNRYrhRJM5+AigTEZHR1ld38D0KjjaxHArbLo2SdthbVvRZSqUFMOJJnLgPU0Z
      Jq3pNlrTbTX/3ndoXRKiceQkWASaBEAEmgRABJoEQASaBEAEmgRABJoEQATavgHwPI9KpdLI
      vgjRcPsEQPPhr/6Lf/mnf6Xw2We1xvM0nufhaY32PDxPo7VXd+mDEMdp3yvBZjjBd967TPQz
      z60tTvN4pURUF3GsGBFKbDsWsZDHdllx+QuXsKQYTjSRfQNQLeWZfjhD/8AZQoDnFLl1dxrP
      CpHpG0BpB4wwCa3ZRtEd11RdjZJiONFE9g2A8sAO2+jdx4YV5Rvf/AYra+uUtrI49s7KcHk3
      RIvtkisreiyFQorhRPOouadpDVpXefRkjq+8/dbzPyiDjvYMtGde2abryLooxNGp+TE9c/8W
      s9kiyZCB2+geCdFANQMwOH6Bkf5ODMuWCwXiVNt3/y4USkxeOLd7RC/E6VQzAJ5TwdUuW9vl
      RvdHiIaqGYDf//a/Gb98hfXZx8i1YHGa1QxAb3c7t2/dxI3GCTe6R0I0UM1p0GRHP291DNCW
      qf39XyFOi5ojwMbKHD/58Y/56U9/LYdA4lSrOQIMn7vM2uoqc9nSZxKi2czlMMIxVLVIRZvE
      QwYVbRIyPMquIhmP1mpOiBNr35qD1rYM26r6QgDK5RJzMwvEbOjsHWD6yTSOa2JYHp4DY+fP
      Y0sxnGgi+wYg0zVAdxe47B4naXCrFULhCLaqcP/hYzKtccJaU8IgGfJwXY0hxXCiidQMwObT
      eX70b+/TPzTOX7777d1nNcViiWSyFbOapzuRIW5WyTs2nSGHXNkgLMVwosnU3NNSnWd44/wI
      FSO2Vw2KMjk7NrH74Hnp27OyuPSRdVGIo7Pvx7TW8g0vcfrtG4DOrm62NjaejwBCnEKfe6Cu
      UBIAcartG4CN3DqeYUg1qDjV9l8WRYOBlhFAnGo1A/DRtT9x5WvfZLCzTb4RJk61mtOg7S0h
      Pvj5L3GVzYVG90iIBqoZgIHxS/SP7fwulQ3iNNvnkqtCvbLnaxZnn2AlMtjeNq4VJ6zLFFyL
      pO2yUVb0dMjlMNFcfNQcaMLRGPOLs0SsEJpNlNIYGtaVIoSmkmnFQqN31lWpq0MaLcssioY5
      eAD0zoyQUgqlDMAFpXbPohWG0jv7vNopaHud2SNdZ3iE8MvHCKAobG7Q3tFDSG/jWkkiukje
      temwXTbKBiFT7Vw80xr16jHUAf8VhWnK1QfRGD7uE2wwMLx7Zkzr7s8kyd3fEofZKyEaRNa9
      EoEmARCBJgEQgSYBEIEmARCB1lRfvn0y9Sc27C7SrLFabaG8fIdwup9UW4aR/u7j7p5oQk01
      AgyeHcFQmv6hEWxDEY8nWF2e49OPr7NVlqvHwr+mGgGmPv2Ej2bzmJstfHRvjR++9w3SK8tc
      ++Q+3gEvHi88ecDCRpn+dJTptQLh0jolK0VHe4aRof6jfQPixPFVC7Q0+4SqFcesblEiQjoC
      edcmtXuPsIEzXUdaPTp55c+ZvLL7+5s7P+PxFvqGxg/cRu/gKNnbN+nqH2Zl8xYhM87ywjIr
      89OkOnrpiMtV6CDxNQKk2jLMLa5QyD2lb+QC2exTTF1gURnElEfZ7cRmZ2EsfQgLY02vP+La
      zO99txELxXh38gc1//Z46gbXbtyFaplrN+7yg796DyMU4+7UTSpVB8eROqQg8TUCTD+apmdw
      iNZ4hLmZaWIRi6pngOFS1GAqMJSxUwtU58JYKPZqgeY3Znn/1k98N5GJd/D9iz+s+bfRi19k
      9OIXAbhweedn6/g5RsbP1ddf0dR8jQDt7RnK5SqxSJjhkRHCyqXsmURMj21HYRs7B0D1FsLB
      TjHc8+3rLah73ofCxhPm7vx7HY0YTFz9u7r+fdE8fATAoLOn95VnI7s/T+qNNIpbCzy68c++
      t1PKlAAEQFNNgwpx2JpqGvSkWF18ws3Hy/QlDW5MPSLV0YWHyWBvN+cmRo+7e8IHGQHq0N4z
      SHtrjELV4p1vXca0W1FOmftT13m0tHHc3RM+SADqsPDoDjdv3iaaiPDLP8zy1a9c4PzkJJmW
      FJGwfdzdEz7IIVAdeofP8dfDO9Om47vTp319vfT1vTpJIE42CcABFCou12a36tr2q4MpQpYM
      tCeVBOAAqq7myXq5rm2/PCBXlk8y+WgSgearFGLm0X0cK0FYF3GsBBFK5B2LVMgjV4LRs/2y
      lKJoKr4OgTq7e1l4ukJF2+hSgYKhCOkS2aJBwvAoOZrQId4l0vPqW5v6s224bv3rWx9GG67r
      4qjah0FuucAfrl1nbGKM2eUco32dJFrSGPIp0jA+AuDx6cef0DU0zNbqEq4VJazLbLkWYdtj
      tQpdpsJUh3eXSMOorzT5s228ziJbz9uouwlM08SyajewOrtIsVzio+s32KxovPwa429cpS0Z
      qfl6cfh81QJd/uKbaGXS25EBZaDw8FAYClwPLPnk8qVSLpNqSaEiaUZth/mVZe7dneLP3nrz
      uLsWGL6WRgxHoi89Z+7dQklWM/Svf2yS/J17nB0fR1fLdLS3YSTaj7tbgSLToA2itUa7+Vee
      PzcxCGxDCCKZFFDBcyovvEaZMZSq/Qkz+/A2n9x+yNjkJK6K0N0WI51uO4J3cDpJABrFK5L/
      9O/r2jQ+8Q+YscGaf+sfOc9Wvszq00XWtwqsxlt468tXidoyJB+EXAdocm6lQFmF+fKVqwyc
      6aeUnebBzNJxd6tpyAjQ5LSymBwfw7AMRkZGyaTitPXIGkkHJQFoIp7n4FRePY8wgGp5Zxau
      vbMV3C0qL126sMMtr/VV1dNKAtBEcss3+MP7f1PXtu/87XXY50Q6yOQcQASajACCwsoMH3x4
      l+GBdhayZUb7OxgZHjnubjWErwDMP54i2j5GbuEeRFsJedsvFMNNjg3XuL2qOOnuPZwhalXZ
      LntUiznu31lF2wlG+7sO3IZT2uQXv/odQyNDPJxd442Jfjp7+rBOeGGTrwB0d2dY3nbZLhaI
      RVtxsEiamrxnkI5oSq4Uw73sWTGcfs02tOO83ntxHdQ+C6gODfSx8PGntLT30daS4uncA4rF
      4t77P4iZh/fIl6psbmyQ38xy62aOrYrBiI8QHQdfxXBPHk2z6mToSKRYz+WIWw7rjk0i5LJY
      VnT2SzHcy54Vw+nXOAE1TRPTsl7vvZgWap//z3TvEO/2Du0+6mJsbKzm6z5PR1cv4ccLeOE0
      X5hs4enSNNn1dSbOnqm7z43gqxhu+MJVhncfnT2S7oijVt4ucPt/P6hr2wtvf5dQJFbzb8n2
      Xt597/t7j8cmJny371YKfPCzXzA0OsyNqTmuXBqhZ2iEiHl0h1FyEhww5WKB6z/7j7q2HfvS
      24QiMbSn2ZhZq6uNRE8L1j4rZxRy86xteqTz20RMh/sP7pMtenzp4sFX//ZLAiB801oz/7uH
      dW179rvn9w1ArKWXzvR9VKiFNy5m2FxfZqtc33exD0oCIE4MK5zgO++8+/yJs8P7v/hzFLY2
      Meww2nWIRCNoZWDuMz0pARDHZnVqEc/1P1vY0t9GuOXl76Y8o/n5T/+TSxcn+NUfHzI5Ns7l
      Ny8RsyUA4oRZvT2P+3LR0gGEU9H9A6Ad4tE406tVJvraWF+b4ze/zfPOt75W8+USAHG6eB6h
      SJyOnjO0JyycyjZz2eq+L5cAiNPFDPP1v/j2C0919+3/cgmAaGq//tE/srX21Pd2F97+HiAB
      EE0uuzDD+tKc7+3OvnEV8BmA5fnHRNMDFNaeUDWTRCmy5dq02C7rZcXI4BlZGU40FV8BaE2G
      WSuWKVctvMomjqGwvCqrVUXc0LIyXA0nrRjutd+L46DrmLp8uQ2AepcN9rzPtKHra+XZ9Kuv
      tUHXs1lWyxqrksOzIti6TMGzsC2P9Sp0y8pwrzhpxXCv08bOe7HwVP0BeNYG1HsP0J39Yq+N
      OuvvDXNn//Q1AiQzA8SVRdjOoJWFiYujDSzDo+opWRlONB1fK8PFk6lXNrf2fhOi+ch3gkWg
      SQBEoEkARKBJAESgSQBEoEkARKBJAESgSQBEoNV1/erx/Sl0uIWwLr6wMty50bOyMpxoKnUF
      YCu/RSqapuqYJAyXLcegNezJynA1SDFc7Tag6Yrh9jYllWhhdXWVhO2w7oSIhVwWy8jKcDVI
      MVztNqAJi+F2N2VobIKhuv5ZIU4WOQkWgSYBEIEmARCBJgEQgSYBEIEmARCBdigBKORWmV9e
      q/vChhDH5VACsLCao7q1RrX+6yNCHIvD+S671vLpL5rS/wHEW/8PYZ1mlQAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Country- Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='Ship Mode- Freq. Dist.' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB8CAYAAAA/1L8JAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAQz0lEQVR4nO3dfVzN9//H8cf3W1KZfi42F2tjrsYwQ0cL68QiIy2WL6O+TBbNVbRcNpmG
      MpZZbDJXmTZ+ZtOMJkTHcnkSDUNGmWviq35OqdPt8/vjJL6Uk5Q2n9f9dvOH87l6nc/tPPu8
      zznvz3n9Q1EUBSFU6p+VXYAQlUkCIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIg
      VE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRN
      AiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIg
      VE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFRNAiBUTQIgVE0CIFTN0twKer3+SdQhRKX4
      h6IoSmUXIURlkSGQUDUJgFA1CYBQNQmAULXHCkBWajRB/brSUaOhY9d+jJyfwEVjeZVWkgyi
      vTVM15XP3nTTNXhHZxSzxMjFhDB83ZzRaDQ4u/kSmXzLzDbi76bsAbi1hZkjYnnuw/Xs0utJ
      jA2nb+5OdOdNi//uL5Is3Se8F3wchzmx7NXr2b56JE1u/6eyyxLlzOz3ACU6d4a0/Ffp3bGW
      aSd2Tek+JbTcCqtch1k2K57W07Ywqp2d6aE6GnrVqdyqRPkr+xXghZa0sYsn8pOtnDHcO+4x
      DVECN8GJSC80Gg2awvFK5rYZvFs4pNA4uzFq2TFu3bNNwIK7QyrngZEUjjgwXkwg7N93hloB
      rLt492jm9jldl8X++QNx1kxHB5CVSnRQH5w1GjTOfYjYW8xzyziEPrMtnV63M38eMrcx4103
      0/40zriNWsaxO3WfXk9Qn7u1+a44YVqQtZ/5hc9H07Er/WZsI7PUJ16UK+Ux5F/YrkR84Km8
      4eCkdPGZpqw5fLNoWWKIgzJoZfp/rX/t6EEl7eZt07aZPyhjHQYrq88piqKkKysHOSjvL/lN
      uXArX1FuH1Q+6+2ghCQqiqKcUBb3dVIGLzum3MpXFOX2MWVR/zvLzO9z0OAAJWBN4bbK/ym/
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ship Mode- Hist.' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ship Mode- Pie Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub-Category- Freq. Dist.' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sub-Category- Hist' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sub-Category- Pie Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
